import { AfterViewInit, EventEmitter, OnInit } from '@angular/core';
import { EmojiSearch } from './emoji-search.service';
import * as ɵngcc0 from '@angular/core';
export declare class SearchComponent implements AfterViewInit, OnInit {
    private emojiSearch;
    maxResults: number;
    autoFocus: boolean;
    i18n: any;
    include: string[];
    exclude: string[];
    custom: any[];
    icons: {
        [key: string]: string;
    };
    emojisToShowFilter?: (x: any) => boolean;
    searchResults: EventEmitter<any[]>;
    enterKey: EventEmitter<any>;
    private inputRef;
    isSearching: boolean;
    icon?: string;
    query: string;
    inputId: string;
    constructor(emojiSearch: EmojiSearch);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    clear(): void;
    handleEnterKey($event: Event): void;
    handleSearch(value: string): void;
    handleChange(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SearchComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SearchComponent, "emoji-search", never, { "maxResults": "maxResults"; "autoFocus": "autoFocus"; "include": "include"; "exclude": "exclude"; "custom": "custom"; "i18n": "i18n"; "icons": "icons"; "emojisToShowFilter": "emojisToShowFilter"; }, { "searchResults": "searchResults"; "enterKey": "enterKey"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzZWFyY2guY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIEV2ZW50RW1pdHRlciwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFbW9qaVNlYXJjaCB9IGZyb20gJy4vZW1vamktc2VhcmNoLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2VhcmNoQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25Jbml0IHtcbiAgICBwcml2YXRlIGVtb2ppU2VhcmNoO1xuICAgIG1heFJlc3VsdHM6IG51bWJlcjtcbiAgICBhdXRvRm9jdXM6IGJvb2xlYW47XG4gICAgaTE4bjogYW55O1xuICAgIGluY2x1ZGU6IHN0cmluZ1tdO1xuICAgIGV4Y2x1ZGU6IHN0cmluZ1tdO1xuICAgIGN1c3RvbTogYW55W107XG4gICAgaWNvbnM6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nO1xuICAgIH07XG4gICAgZW1vamlzVG9TaG93RmlsdGVyPzogKHg6IGFueSkgPT4gYm9vbGVhbjtcbiAgICBzZWFyY2hSZXN1bHRzOiBFdmVudEVtaXR0ZXI8YW55W10+O1xuICAgIGVudGVyS2V5OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBwcml2YXRlIGlucHV0UmVmO1xuICAgIGlzU2VhcmNoaW5nOiBib29sZWFuO1xuICAgIGljb24/OiBzdHJpbmc7XG4gICAgcXVlcnk6IHN0cmluZztcbiAgICBpbnB1dElkOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoZW1vamlTZWFyY2g6IEVtb2ppU2VhcmNoKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIGNsZWFyKCk6IHZvaWQ7XG4gICAgaGFuZGxlRW50ZXJLZXkoJGV2ZW50OiBFdmVudCk6IHZvaWQ7XG4gICAgaGFuZGxlU2VhcmNoKHZhbHVlOiBzdHJpbmcpOiB2b2lkO1xuICAgIGhhbmRsZUNoYW5nZSgpOiB2b2lkO1xufVxuIl19