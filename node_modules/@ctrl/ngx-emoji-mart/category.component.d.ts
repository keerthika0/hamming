import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';
import { Emoji, EmojiService } from '@ctrl/ngx-emoji-mart/ngx-emoji';
import { EmojiFrequentlyService } from './emoji-frequently.service';
import * as ɵngcc0 from '@angular/core';
export declare class CategoryComponent implements OnInit {
    ref: ChangeDetectorRef;
    private emojiService;
    private frequently;
    emojis?: any[] | null;
    hasStickyPosition: boolean;
    name: string;
    perLine: number;
    totalFrequentLines: number;
    recent: string[];
    custom: any[];
    i18n: any;
    id: any;
    hideObsolete: boolean;
    notFoundEmoji?: string;
    emojiIsNative?: Emoji['isNative'];
    emojiSkin: Emoji['skin'];
    emojiSize: Emoji['size'];
    emojiSet: Emoji['set'];
    emojiSheetSize: Emoji['sheetSize'];
    emojiForceSize: Emoji['forceSize'];
    emojiTooltip: Emoji['tooltip'];
    emojiBackgroundImageFn?: Emoji['backgroundImageFn'];
    emojiUseButton?: boolean;
    emojiOver: Emoji['emojiOver'];
    emojiLeave: Emoji['emojiLeave'];
    emojiClick: Emoji['emojiClick'];
    container: ElementRef;
    label: ElementRef;
    containerStyles: any;
    labelStyles: any;
    labelSpanStyles: any;
    margin: number;
    minMargin: number;
    maxMargin: number;
    top: number;
    constructor(ref: ChangeDetectorRef, emojiService: EmojiService, frequently: EmojiFrequentlyService);
    ngOnInit(): void;
    memoizeSize(): void;
    handleScroll(scrollTop: number): boolean;
    getEmojis(): any[];
    updateDisplay(display: 'none' | 'block'): void;
    trackById(index: number, item: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CategoryComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CategoryComponent, "emoji-category", never, { "hasStickyPosition": "hasStickyPosition"; "name": "name"; "perLine": "perLine"; "totalFrequentLines": "totalFrequentLines"; "recent": "recent"; "custom": "custom"; "hideObsolete": "hideObsolete"; "emojis": "emojis"; "i18n": "i18n"; "id": "id"; "notFoundEmoji": "notFoundEmoji"; "emojiIsNative": "emojiIsNative"; "emojiSkin": "emojiSkin"; "emojiSize": "emojiSize"; "emojiSet": "emojiSet"; "emojiSheetSize": "emojiSheetSize"; "emojiForceSize": "emojiForceSize"; "emojiTooltip": "emojiTooltip"; "emojiBackgroundImageFn": "emojiBackgroundImageFn"; "emojiUseButton": "emojiUseButton"; }, { "emojiOver": "emojiOver"; "emojiLeave": "emojiLeave"; "emojiClick": "emojiClick"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2F0ZWdvcnkuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNhdGVnb3J5LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFbW9qaSwgRW1vamlTZXJ2aWNlIH0gZnJvbSAnQGN0cmwvbmd4LWVtb2ppLW1hcnQvbmd4LWVtb2ppJztcbmltcG9ydCB7IEVtb2ppRnJlcXVlbnRseVNlcnZpY2UgfSBmcm9tICcuL2Vtb2ppLWZyZXF1ZW50bHkuc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDYXRlZ29yeUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgcmVmOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBwcml2YXRlIGVtb2ppU2VydmljZTtcbiAgICBwcml2YXRlIGZyZXF1ZW50bHk7XG4gICAgZW1vamlzPzogYW55W10gfCBudWxsO1xuICAgIGhhc1N0aWNreVBvc2l0aW9uOiBib29sZWFuO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBwZXJMaW5lOiBudW1iZXI7XG4gICAgdG90YWxGcmVxdWVudExpbmVzOiBudW1iZXI7XG4gICAgcmVjZW50OiBzdHJpbmdbXTtcbiAgICBjdXN0b206IGFueVtdO1xuICAgIGkxOG46IGFueTtcbiAgICBpZDogYW55O1xuICAgIGhpZGVPYnNvbGV0ZTogYm9vbGVhbjtcbiAgICBub3RGb3VuZEVtb2ppPzogc3RyaW5nO1xuICAgIGVtb2ppSXNOYXRpdmU/OiBFbW9qaVsnaXNOYXRpdmUnXTtcbiAgICBlbW9qaVNraW46IEVtb2ppWydza2luJ107XG4gICAgZW1vamlTaXplOiBFbW9qaVsnc2l6ZSddO1xuICAgIGVtb2ppU2V0OiBFbW9qaVsnc2V0J107XG4gICAgZW1vamlTaGVldFNpemU6IEVtb2ppWydzaGVldFNpemUnXTtcbiAgICBlbW9qaUZvcmNlU2l6ZTogRW1vamlbJ2ZvcmNlU2l6ZSddO1xuICAgIGVtb2ppVG9vbHRpcDogRW1vamlbJ3Rvb2x0aXAnXTtcbiAgICBlbW9qaUJhY2tncm91bmRJbWFnZUZuPzogRW1vamlbJ2JhY2tncm91bmRJbWFnZUZuJ107XG4gICAgZW1vamlVc2VCdXR0b24/OiBib29sZWFuO1xuICAgIGVtb2ppT3ZlcjogRW1vamlbJ2Vtb2ppT3ZlciddO1xuICAgIGVtb2ppTGVhdmU6IEVtb2ppWydlbW9qaUxlYXZlJ107XG4gICAgZW1vamlDbGljazogRW1vamlbJ2Vtb2ppQ2xpY2snXTtcbiAgICBjb250YWluZXI6IEVsZW1lbnRSZWY7XG4gICAgbGFiZWw6IEVsZW1lbnRSZWY7XG4gICAgY29udGFpbmVyU3R5bGVzOiBhbnk7XG4gICAgbGFiZWxTdHlsZXM6IGFueTtcbiAgICBsYWJlbFNwYW5TdHlsZXM6IGFueTtcbiAgICBtYXJnaW46IG51bWJlcjtcbiAgICBtaW5NYXJnaW46IG51bWJlcjtcbiAgICBtYXhNYXJnaW46IG51bWJlcjtcbiAgICB0b3A6IG51bWJlcjtcbiAgICBjb25zdHJ1Y3RvcihyZWY6IENoYW5nZURldGVjdG9yUmVmLCBlbW9qaVNlcnZpY2U6IEVtb2ppU2VydmljZSwgZnJlcXVlbnRseTogRW1vamlGcmVxdWVudGx5U2VydmljZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBtZW1vaXplU2l6ZSgpOiB2b2lkO1xuICAgIGhhbmRsZVNjcm9sbChzY3JvbGxUb3A6IG51bWJlcik6IGJvb2xlYW47XG4gICAgZ2V0RW1vamlzKCk6IGFueVtdO1xuICAgIHVwZGF0ZURpc3BsYXkoZGlzcGxheTogJ25vbmUnIHwgJ2Jsb2NrJyk6IHZvaWQ7XG4gICAgdHJhY2tCeUlkKGluZGV4OiBudW1iZXIsIGl0ZW06IGFueSk6IGFueTtcbn1cbiJdfQ==