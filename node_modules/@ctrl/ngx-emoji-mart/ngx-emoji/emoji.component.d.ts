import { EventEmitter, OnChanges } from '@angular/core';
import { EmojiData } from './data/data.interfaces';
import { EmojiService } from './emoji.service';
import * as ɵngcc0 from '@angular/core';
export interface Emoji {
    /** Renders the native unicode emoji */
    isNative: boolean;
    forceSize: boolean;
    tooltip: boolean;
    skin: 1 | 2 | 3 | 4 | 5 | 6;
    sheetSize: 16 | 20 | 32 | 64;
    sheetRows?: number;
    set: 'apple' | 'google' | 'twitter' | 'facebook' | '';
    size: number;
    emoji: string | EmojiData;
    backgroundImageFn: (set: string, sheetSize: number) => string;
    fallback?: (data: any, props: any) => string;
    emojiOver: EventEmitter<EmojiEvent>;
    emojiLeave: EventEmitter<EmojiEvent>;
    emojiClick: EventEmitter<EmojiEvent>;
}
export interface EmojiEvent {
    emoji: EmojiData;
    $event: Event;
}
export declare class EmojiComponent implements OnChanges, Emoji {
    private emojiService;
    skin: Emoji['skin'];
    set: Emoji['set'];
    sheetSize: Emoji['sheetSize'];
    /** Renders the native unicode emoji */
    isNative: Emoji['isNative'];
    forceSize: Emoji['forceSize'];
    tooltip: Emoji['tooltip'];
    size: Emoji['size'];
    emoji: Emoji['emoji'];
    fallback?: Emoji['fallback'];
    hideObsolete: boolean;
    SHEET_COLUMNS: number;
    sheetRows?: number;
    sheetColumns?: number;
    useButton?: boolean;
    emojiOver: Emoji['emojiOver'];
    emojiLeave: Emoji['emojiLeave'];
    emojiClick: Emoji['emojiClick'];
    style: any;
    title: string;
    label: string;
    unified?: string | null;
    custom: boolean;
    isVisible: boolean;
    backgroundImageFn: Emoji['backgroundImageFn'];
    constructor(emojiService: EmojiService);
    ngOnChanges(): boolean;
    getData(): EmojiData;
    getSanitizedData(): EmojiData;
    handleClick($event: Event): void;
    handleOver($event: Event): void;
    handleLeave($event: Event): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<EmojiComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<EmojiComponent, "ngx-emoji", never, { "skin": "skin"; "set": "set"; "sheetSize": "sheetSize"; "isNative": "isNative"; "forceSize": "forceSize"; "tooltip": "tooltip"; "size": "size"; "emoji": "emoji"; "hideObsolete": "hideObsolete"; "SHEET_COLUMNS": "SHEET_COLUMNS"; "backgroundImageFn": "backgroundImageFn"; "fallback": "fallback"; "sheetRows": "sheetRows"; "sheetColumns": "sheetColumns"; "useButton": "useButton"; }, { "emojiOver": "emojiOver"; "emojiLeave": "emojiLeave"; "emojiClick": "emojiClick"; }, never, ["*", "*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1vamkuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImVtb2ppLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRW1vamlEYXRhIH0gZnJvbSAnLi9kYXRhL2RhdGEuaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBFbW9qaVNlcnZpY2UgfSBmcm9tICcuL2Vtb2ppLnNlcnZpY2UnO1xuZXhwb3J0IGludGVyZmFjZSBFbW9qaSB7XG4gICAgLyoqIFJlbmRlcnMgdGhlIG5hdGl2ZSB1bmljb2RlIGVtb2ppICovXG4gICAgaXNOYXRpdmU6IGJvb2xlYW47XG4gICAgZm9yY2VTaXplOiBib29sZWFuO1xuICAgIHRvb2x0aXA6IGJvb2xlYW47XG4gICAgc2tpbjogMSB8IDIgfCAzIHwgNCB8IDUgfCA2O1xuICAgIHNoZWV0U2l6ZTogMTYgfCAyMCB8IDMyIHwgNjQ7XG4gICAgc2hlZXRSb3dzPzogbnVtYmVyO1xuICAgIHNldDogJ2FwcGxlJyB8ICdnb29nbGUnIHwgJ3R3aXR0ZXInIHwgJ2ZhY2Vib29rJyB8ICcnO1xuICAgIHNpemU6IG51bWJlcjtcbiAgICBlbW9qaTogc3RyaW5nIHwgRW1vamlEYXRhO1xuICAgIGJhY2tncm91bmRJbWFnZUZuOiAoc2V0OiBzdHJpbmcsIHNoZWV0U2l6ZTogbnVtYmVyKSA9PiBzdHJpbmc7XG4gICAgZmFsbGJhY2s/OiAoZGF0YTogYW55LCBwcm9wczogYW55KSA9PiBzdHJpbmc7XG4gICAgZW1vamlPdmVyOiBFdmVudEVtaXR0ZXI8RW1vamlFdmVudD47XG4gICAgZW1vamlMZWF2ZTogRXZlbnRFbWl0dGVyPEVtb2ppRXZlbnQ+O1xuICAgIGVtb2ppQ2xpY2s6IEV2ZW50RW1pdHRlcjxFbW9qaUV2ZW50Pjtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgRW1vamlFdmVudCB7XG4gICAgZW1vamk6IEVtb2ppRGF0YTtcbiAgICAkZXZlbnQ6IEV2ZW50O1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRW1vamlDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIEVtb2ppIHtcbiAgICBwcml2YXRlIGVtb2ppU2VydmljZTtcbiAgICBza2luOiBFbW9qaVsnc2tpbiddO1xuICAgIHNldDogRW1vamlbJ3NldCddO1xuICAgIHNoZWV0U2l6ZTogRW1vamlbJ3NoZWV0U2l6ZSddO1xuICAgIC8qKiBSZW5kZXJzIHRoZSBuYXRpdmUgdW5pY29kZSBlbW9qaSAqL1xuICAgIGlzTmF0aXZlOiBFbW9qaVsnaXNOYXRpdmUnXTtcbiAgICBmb3JjZVNpemU6IEVtb2ppWydmb3JjZVNpemUnXTtcbiAgICB0b29sdGlwOiBFbW9qaVsndG9vbHRpcCddO1xuICAgIHNpemU6IEVtb2ppWydzaXplJ107XG4gICAgZW1vamk6IEVtb2ppWydlbW9qaSddO1xuICAgIGZhbGxiYWNrPzogRW1vamlbJ2ZhbGxiYWNrJ107XG4gICAgaGlkZU9ic29sZXRlOiBib29sZWFuO1xuICAgIFNIRUVUX0NPTFVNTlM6IG51bWJlcjtcbiAgICBzaGVldFJvd3M/OiBudW1iZXI7XG4gICAgc2hlZXRDb2x1bW5zPzogbnVtYmVyO1xuICAgIHVzZUJ1dHRvbj86IGJvb2xlYW47XG4gICAgZW1vamlPdmVyOiBFbW9qaVsnZW1vamlPdmVyJ107XG4gICAgZW1vamlMZWF2ZTogRW1vamlbJ2Vtb2ppTGVhdmUnXTtcbiAgICBlbW9qaUNsaWNrOiBFbW9qaVsnZW1vamlDbGljayddO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgdGl0bGU6IHN0cmluZztcbiAgICBsYWJlbDogc3RyaW5nO1xuICAgIHVuaWZpZWQ/OiBzdHJpbmcgfCBudWxsO1xuICAgIGN1c3RvbTogYm9vbGVhbjtcbiAgICBpc1Zpc2libGU6IGJvb2xlYW47XG4gICAgYmFja2dyb3VuZEltYWdlRm46IEVtb2ppWydiYWNrZ3JvdW5kSW1hZ2VGbiddO1xuICAgIGNvbnN0cnVjdG9yKGVtb2ppU2VydmljZTogRW1vamlTZXJ2aWNlKTtcbiAgICBuZ09uQ2hhbmdlcygpOiBib29sZWFuO1xuICAgIGdldERhdGEoKTogRW1vamlEYXRhO1xuICAgIGdldFNhbml0aXplZERhdGEoKTogRW1vamlEYXRhO1xuICAgIGhhbmRsZUNsaWNrKCRldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIGhhbmRsZU92ZXIoJGV2ZW50OiBFdmVudCk6IHZvaWQ7XG4gICAgaGFuZGxlTGVhdmUoJGV2ZW50OiBFdmVudCk6IHZvaWQ7XG59XG4iXX0=