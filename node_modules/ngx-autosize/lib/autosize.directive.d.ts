import { ElementRef, NgZone, OnDestroy, OnChanges, AfterContentChecked, EventEmitter } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class AutosizeDirective implements OnDestroy, OnChanges, AfterContentChecked {
    element: ElementRef;
    private _zone;
    minRows: any;
    private _minRows;
    maxRows: number;
    onlyGrow: boolean;
    useImportant: boolean;
    resized: EventEmitter<number>;
    private retries;
    private textAreaEl;
    private _oldContent;
    private _oldWidth;
    private _windowResizeHandler;
    private _destroyed;
    onInput(textArea: HTMLTextAreaElement): void;
    constructor(element: ElementRef, _zone: NgZone);
    ngOnDestroy(): void;
    ngAfterContentChecked(): void;
    ngOnChanges(changes: any): void;
    _findNestedTextArea(): void;
    _onTextAreaFound(): void;
    _addWindowResizeHandler(): void;
    adjust(inputsChanged?: boolean): void;
    private _getLineHeight;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AutosizeDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AutosizeDirective, "[autosize]", never, { "onlyGrow": "onlyGrow"; "useImportant": "useImportant"; "minRows": "minRows"; "maxRows": "maxRows"; }, { "resized": "resized"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0b3NpemUuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImF1dG9zaXplLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE5nWm9uZSwgT25EZXN0cm95LCBPbkNoYW5nZXMsIEFmdGVyQ29udGVudENoZWNrZWQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQXV0b3NpemVEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uQ2hhbmdlcywgQWZ0ZXJDb250ZW50Q2hlY2tlZCB7XG4gICAgZWxlbWVudDogRWxlbWVudFJlZjtcbiAgICBwcml2YXRlIF96b25lO1xuICAgIG1pblJvd3M6IGFueTtcbiAgICBwcml2YXRlIF9taW5Sb3dzO1xuICAgIG1heFJvd3M6IG51bWJlcjtcbiAgICBvbmx5R3JvdzogYm9vbGVhbjtcbiAgICB1c2VJbXBvcnRhbnQ6IGJvb2xlYW47XG4gICAgcmVzaXplZDogRXZlbnRFbWl0dGVyPG51bWJlcj47XG4gICAgcHJpdmF0ZSByZXRyaWVzO1xuICAgIHByaXZhdGUgdGV4dEFyZWFFbDtcbiAgICBwcml2YXRlIF9vbGRDb250ZW50O1xuICAgIHByaXZhdGUgX29sZFdpZHRoO1xuICAgIHByaXZhdGUgX3dpbmRvd1Jlc2l6ZUhhbmRsZXI7XG4gICAgcHJpdmF0ZSBfZGVzdHJveWVkO1xuICAgIG9uSW5wdXQodGV4dEFyZWE6IEhUTUxUZXh0QXJlYUVsZW1lbnQpOiB2b2lkO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IEVsZW1lbnRSZWYsIF96b25lOiBOZ1pvbmUpO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgbmdBZnRlckNvbnRlbnRDaGVja2VkKCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogYW55KTogdm9pZDtcbiAgICBfZmluZE5lc3RlZFRleHRBcmVhKCk6IHZvaWQ7XG4gICAgX29uVGV4dEFyZWFGb3VuZCgpOiB2b2lkO1xuICAgIF9hZGRXaW5kb3dSZXNpemVIYW5kbGVyKCk6IHZvaWQ7XG4gICAgYWRqdXN0KGlucHV0c0NoYW5nZWQ/OiBib29sZWFuKTogdm9pZDtcbiAgICBwcml2YXRlIF9nZXRMaW5lSGVpZ2h0O1xufVxuIl19