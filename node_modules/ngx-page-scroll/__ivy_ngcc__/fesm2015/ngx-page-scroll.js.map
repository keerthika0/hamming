{"version":3,"file":"ngx-page-scroll.js","sources":["ng:/ngx-page-scroll/lib/ngx-page-scroll.directive.ts","ng:/ngx-page-scroll/lib/ngx-page-scroll.module.ts","ng:/ngx-page-scroll/public_api.ts","ng:/ngx-page-scroll/ngx-page-scroll.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-host-metadata-property directive-selector */\n\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { NavigationCancel, NavigationEnd, NavigationError, Router, UrlTree } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\n\nimport { EasingLogic, PageScrollInstance, PageScrollOptions, PageScrollService } from 'ngx-page-scroll-core';\nimport { filter, take } from 'rxjs/operators';\n\n@Directive({\n  selector: '[pageScroll]',\n  host: {\n    '(click)': 'handleClick($event)',\n  },\n})\nexport class NgxPageScrollDirective implements OnChanges, OnDestroy {\n\n  @Input()\n  public routerLink: any;\n\n  @Input()\n  public href: string;\n\n  @Input()\n  public fragment: string;\n\n  @Input()\n  public pageScrollTarget: string;\n\n  @Input()\n  public pageScrollHorizontal: boolean;\n\n  @Input()\n  public pageScrollOffset: number;\n\n  @Input()\n  public pageScrollDuration: number;\n\n  @Input()\n  public pageScrollSpeed: number;\n\n  @Input()\n  public pageScrollEasing: EasingLogic;\n\n  @Input()\n  public pageScrollInterruptible: boolean;\n\n  @Input()\n  public pageScrollInView: boolean;\n\n  @Input()\n  public pageScrollAdjustHash = false;\n\n  @Input()\n  public pageScroll: string;\n\n  @Output()\n  pageScrollFinish: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  private pageScrollInstance: PageScrollInstance;\n  private document: Document;\n\n  constructor(private pageScrollService: PageScrollService, @Optional() private router: Router, @Inject(DOCUMENT) document: any) {\n    this.document = <Document>document;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // Some inputs changed, reset the pageScrollInstance\n    this.pageScrollInstance = undefined;\n  }\n\n  ngOnDestroy(): void {\n    if (this.pageScrollInstance) {\n      this.pageScrollService.stop(this.pageScrollInstance);\n    }\n  }\n\n  private getPageScrollTarget(): string {\n    return this.pageScrollTarget || this.href || (this.fragment ? '#' + this.fragment : '');\n  }\n\n  private generatePageScrollInstance(): PageScrollInstance {\n    if (this.pageScrollInstance === undefined || this.pageScrollInstance === null) {\n      const options: PageScrollOptions = {\n        document: this.document,\n        scrollTarget: this.getPageScrollTarget(),\n      };\n\n      if (this.pageScroll) {\n        options.namespace = this.pageScroll;\n      }\n      if (this.pageScrollHorizontal !== undefined && this.pageScrollHorizontal !== null) {\n        options.verticalScrolling = !this.pageScrollHorizontal;\n      }\n      if (this.pageScrollOffset !== undefined && this.pageScrollOffset !== null) {\n        options.scrollOffset = this.pageScrollOffset;\n      }\n      if (this.pageScrollInterruptible !== undefined && this.pageScrollInterruptible !== null) {\n        options.interruptible = this.pageScrollInterruptible;\n      }\n      if (this.pageScrollInView !== undefined && this.pageScrollInView !== null) {\n        options.scrollInView = this.pageScrollInView;\n      }\n      if (this.pageScrollEasing) {\n        options.easingLogic = this.pageScrollEasing;\n      }\n      if (this.pageScrollDuration !== undefined && this.pageScrollDuration !== null) {\n        options.duration = this.pageScrollDuration;\n      }\n      if (this.pageScrollSpeed !== undefined && this.pageScrollSpeed !== null) {\n        options.speed = this.pageScrollSpeed;\n      }\n      if (this.pageScrollFinish) {\n        options.scrollFinishListener = this.pageScrollFinish;\n      }\n      this.pageScrollInstance = this.pageScrollService.create(options);\n    }\n\n    return this.pageScrollInstance;\n  }\n\n  private pushRouterState() {\n    if (this.pageScrollAdjustHash && typeof this.pageScrollInstance.pageScrollOptions.scrollTarget === 'string'\n      && (<string>this.pageScrollInstance.pageScrollOptions.scrollTarget).substr(0, 1) === '#') {\n      // \"Navigate\" to the current route again and this time set the fragment/hash\n      this.router.navigate([], {\n        fragment: (<string>this.pageScrollInstance.pageScrollOptions.scrollTarget).substr(1),\n        queryParamsHandling: 'preserve',\n      });\n    }\n  }\n\n  private scroll(): void {\n    const pageScrollInstance = this.generatePageScrollInstance();\n    this.pushRouterState();\n    this.pageScrollService.start(pageScrollInstance);\n  }\n\n  public handleClick(clickEvent: Event): boolean { // tslint:disable-line:no-unused-variable\n    if (this.routerLink && this.router !== null && this.router !== undefined) {\n      let urlTree: UrlTree;\n      if (typeof this.routerLink === 'string') {\n        urlTree = this.router.parseUrl(this.routerLink);\n      } else {\n        urlTree = this.router.createUrlTree(this.routerLink);\n      }\n      if (!this.router.isActive(urlTree, true)) {\n        // We need to navigate their first.\n        // Navigation is handled by the routerLink directive so we only need to listen for route change\n        this.router.events.pipe(filter(routerEvent => {\n            // We're only interested in successful navigations or when the navigation fails\n            return routerEvent instanceof NavigationEnd || routerEvent instanceof NavigationError\n              || routerEvent instanceof NavigationCancel;\n          }),\n          // Consume only one event, automatically \"unsubscribing\" from the event stream afterwards\n          take(1)\n        ).subscribe((routerEvent) => {\n          if (routerEvent instanceof NavigationEnd) {\n            // use a timeout to start scrolling as soon as the stack is cleared\n            setTimeout(() => {\n              this.scroll();\n            }, 0);\n          }\n        });\n\n        return false; // to preventDefault()\n      }\n    }\n    this.scroll();\n\n    return false; // to preventDefault()\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgxPageScrollCoreModule } from 'ngx-page-scroll-core';\n\nimport { NgxPageScrollDirective } from './ngx-page-scroll.directive';\n\n@NgModule({\n  declarations: [\n    NgxPageScrollDirective,\n  ],\n  imports: [\n    NgxPageScrollCoreModule,\n  ],\n  exports: [\n    NgxPageScrollDirective,\n  ],\n})\nexport class NgxPageScrollModule {\n}\n","/*\n * Public API Surface of ngx-page-scroll\n */\n\nexport * from './lib/ngx-page-scroll.module';\n\nexport * from './lib/ngx-page-scroll.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}