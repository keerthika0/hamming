import { EventEmitter, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { Router } from '@angular/router';
import { EasingLogic, PageScrollService } from 'ngx-page-scroll-core';
import * as ɵngcc0 from '@angular/core';
export declare class NgxPageScrollDirective implements OnChanges, OnDestroy {
    private pageScrollService;
    private router;
    routerLink: any;
    href: string;
    fragment: string;
    pageScrollTarget: string;
    pageScrollHorizontal: boolean;
    pageScrollOffset: number;
    pageScrollDuration: number;
    pageScrollSpeed: number;
    pageScrollEasing: EasingLogic;
    pageScrollInterruptible: boolean;
    pageScrollInView: boolean;
    pageScrollAdjustHash: boolean;
    pageScroll: string;
    pageScrollFinish: EventEmitter<boolean>;
    private pageScrollInstance;
    private document;
    constructor(pageScrollService: PageScrollService, router: Router, document: any);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private getPageScrollTarget;
    private generatePageScrollInstance;
    private pushRouterState;
    private scroll;
    handleClick(clickEvent: Event): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxPageScrollDirective, [null, { optional: true; }, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NgxPageScrollDirective, "[pageScroll]", never, { "pageScrollAdjustHash": "pageScrollAdjustHash"; "routerLink": "routerLink"; "href": "href"; "fragment": "fragment"; "pageScrollTarget": "pageScrollTarget"; "pageScrollHorizontal": "pageScrollHorizontal"; "pageScrollOffset": "pageScrollOffset"; "pageScrollDuration": "pageScrollDuration"; "pageScrollSpeed": "pageScrollSpeed"; "pageScrollEasing": "pageScrollEasing"; "pageScrollInterruptible": "pageScrollInterruptible"; "pageScrollInView": "pageScrollInView"; "pageScroll": "pageScroll"; }, { "pageScrollFinish": "pageScrollFinish"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXBhZ2Utc2Nyb2xsLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJuZ3gtcGFnZS1zY3JvbGwuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgRWFzaW5nTG9naWMsIFBhZ2VTY3JvbGxTZXJ2aWNlIH0gZnJvbSAnbmd4LXBhZ2Utc2Nyb2xsLWNvcmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmd4UGFnZVNjcm9sbERpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHBhZ2VTY3JvbGxTZXJ2aWNlO1xuICAgIHByaXZhdGUgcm91dGVyO1xuICAgIHJvdXRlckxpbms6IGFueTtcbiAgICBocmVmOiBzdHJpbmc7XG4gICAgZnJhZ21lbnQ6IHN0cmluZztcbiAgICBwYWdlU2Nyb2xsVGFyZ2V0OiBzdHJpbmc7XG4gICAgcGFnZVNjcm9sbEhvcml6b250YWw6IGJvb2xlYW47XG4gICAgcGFnZVNjcm9sbE9mZnNldDogbnVtYmVyO1xuICAgIHBhZ2VTY3JvbGxEdXJhdGlvbjogbnVtYmVyO1xuICAgIHBhZ2VTY3JvbGxTcGVlZDogbnVtYmVyO1xuICAgIHBhZ2VTY3JvbGxFYXNpbmc6IEVhc2luZ0xvZ2ljO1xuICAgIHBhZ2VTY3JvbGxJbnRlcnJ1cHRpYmxlOiBib29sZWFuO1xuICAgIHBhZ2VTY3JvbGxJblZpZXc6IGJvb2xlYW47XG4gICAgcGFnZVNjcm9sbEFkanVzdEhhc2g6IGJvb2xlYW47XG4gICAgcGFnZVNjcm9sbDogc3RyaW5nO1xuICAgIHBhZ2VTY3JvbGxGaW5pc2g6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcbiAgICBwcml2YXRlIHBhZ2VTY3JvbGxJbnN0YW5jZTtcbiAgICBwcml2YXRlIGRvY3VtZW50O1xuICAgIGNvbnN0cnVjdG9yKHBhZ2VTY3JvbGxTZXJ2aWNlOiBQYWdlU2Nyb2xsU2VydmljZSwgcm91dGVyOiBSb3V0ZXIsIGRvY3VtZW50OiBhbnkpO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBnZXRQYWdlU2Nyb2xsVGFyZ2V0O1xuICAgIHByaXZhdGUgZ2VuZXJhdGVQYWdlU2Nyb2xsSW5zdGFuY2U7XG4gICAgcHJpdmF0ZSBwdXNoUm91dGVyU3RhdGU7XG4gICAgcHJpdmF0ZSBzY3JvbGw7XG4gICAgaGFuZGxlQ2xpY2soY2xpY2tFdmVudDogRXZlbnQpOiBib29sZWFuO1xufVxuIl19