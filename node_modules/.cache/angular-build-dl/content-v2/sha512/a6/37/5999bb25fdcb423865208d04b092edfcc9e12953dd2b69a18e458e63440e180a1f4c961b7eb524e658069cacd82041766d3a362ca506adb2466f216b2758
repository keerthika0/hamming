{"version":3,"sources":["./src/app/components/authentication/authentication-routing.module.ts","./src/app/components/authentication/authentication.module.ts","./src/app/components/authentication/card-details/card-details.component.ts","./src/app/components/authentication/card-details/card-details.component.html","./src/app/components/authentication/email/email.component.ts","./src/app/components/authentication/email/email.component.html","./src/app/components/authentication/forgot/forgot.component.ts","./src/app/components/authentication/forgot/forgot.component.html","./src/app/components/authentication/login/login.component.ts","./src/app/components/authentication/login/login.component.html","./src/app/components/authentication/otp/otp.component.ts","./src/app/components/authentication/otp/otp.component.html","./src/app/components/authentication/plans/plans.component.ts","./src/app/components/authentication/plans/plans.component.html","./src/app/components/authentication/reset/reset.component.ts","./src/app/components/authentication/reset/reset.component.html","./src/app/components/authentication/signup/signup.component.ts","./src/app/components/authentication/signup/signup.component.html","./src/app/components/authentication/twitter/twitter.component.ts","./src/app/components/authentication/twitter/twitter.component.html","./src/app/helpers/customValidators.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACE;AACM;AACN;AACA;AACG;AACA;AACT;AACM;AACoB;;;AAE7E,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,MAAM;QACjB,UAAU,EAAE,OAAO;KACtB;IACD;QACI,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qEAAc;KAC5B;IACD;QACI,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,2EAAgB;KAC9B;IACD;QACI,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,qEAAc;KAC5B;IACD;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,qEAAc;KAC5B;IACD;QACI,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,wEAAe;KAC7B;IACD;QACI,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,wEAAe;KAC7B;IACD;QACI,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,+DAAY;KAC1B;IACD;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,qEAAc;KAC5B;IACD;QACI,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,0FAAoB;KAClC;CACJ,CAAC;AAMK,MAAM,2BAA2B;;0GAA3B,2BAA2B;gLAA3B,2BAA2B,kBAH3B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEb,2BAA2B,uFAF1B,4DAAY;6FAEb,2BAA2B;cAJvC,sDAAQ;eAAC;gBACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC3DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAC+B;AACjC;AACQ;AACI;AACM;AACN;AACA;AACG;AACA;AACT;AACS;AACV;AACe;AACM;AACd;AACoB;;;AAEtE,SAAS,qBAAqB,CAAC,IAAgB;IAClD,OAAO,IAAI,+EAAmB,CAAC,IAAI,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;AACpE,CAAC;AA6BM,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBAfpB;YACL,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,0FAA2B;YAC3B,0EAAY;YACZ,oEAAe,CAAC,QAAQ,CAAC;gBACrB,MAAM,EAAE;oBACJ,OAAO,EAAE,oEAAe;oBACxB,UAAU,EAAE,qBAAqB;oBACjC,IAAI,EAAE,CAAC,gEAAU,CAAC;iBACrB;aACJ,CAAC;SACL;mIAEQ,oBAAoB,mBAzBzB,qEAAc;QACd,2EAAgB;QAChB,qEAAc;QACd,qEAAc;QACd,wEAAe;QACf,wEAAe;QACf,gEAAY;QACZ,sEAAc;QACd,0FAAoB,aAGpB,4DAAY;QACZ,0DAAW;QACX,kEAAmB;QACnB,0FAA2B;QAC3B,0EAAY;6FAUP,oBAAoB;cA3BhC,sDAAQ;eAAC;gBACN,YAAY,EAAE;oBACV,qEAAc;oBACd,2EAAgB;oBAChB,qEAAc;oBACd,qEAAc;oBACd,wEAAe;oBACf,wEAAe;oBACf,gEAAY;oBACZ,sEAAc;oBACd,0FAAoB;iBACvB;gBACD,OAAO,EAAE;oBACL,4DAAY;oBACZ,0DAAW;oBACX,kEAAmB;oBACnB,0FAA2B;oBAC3B,0EAAY;oBACZ,oEAAe,CAAC,QAAQ,CAAC;wBACrB,MAAM,EAAE;4BACJ,OAAO,EAAE,oEAAe;4BACxB,UAAU,EAAE,qBAAqB;4BACjC,IAAI,EAAE,CAAC,gEAAU,CAAC;yBACrB;qBACJ,CAAC;iBACL;aACJ;;;;;;;;;;;;;;ACjDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;;;;;;;;;ICsBhC,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,yJACJ;;;IAFA,kJACI;;;IADU,kGAAoC;;;IAclD,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,0JACJ;;;IACA,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,0JACJ;;;IALA,kJACI;IAEJ,kJACI;;;IAJU,kGAAoC;IAGpC,0DAAqC;IAArC,mGAAqC;;;IAanD,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,+JACJ;;;IACA,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,+JACJ;;;IALA,kJACI;IAEJ,kJACI;;;IAJU,kGAAoC;IAGpC,0DAA0D;IAA1D,4HAA0D;;;IAWxE,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,8JACJ;;;IAFA,kJACI;;;IADU,uIAAqE;;;IAWnF,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,uJACJ;;;IACA,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,qJACJ;;;IACA,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,qJACJ;;;IARA,kJACI;IAEJ,kJACI;IAEJ,kJACI;;;IAPU,kGAAoC;IAGpC,0DAAqC;IAArC,mGAAqC;IAGrC,0DAAqC;IAArC,mGAAqC;;;IAenD,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,0JACJ;;;IAFA,kJACI;;;IADU,kGAAoC;;;IAWlD,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,wJACJ;;;IAFA,kJACI;;;IADU,kGAAoC;;;IAalD,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,yJACJ;;;IAFA,kJACI;;;IADU,kGAAoC;;;IAWlD,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,0JACJ;;;IAFA,kJACI;;;IADU,kGAAoC;;;IAalD,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,2JACJ;;;IAFA,mJACI;;;IADU,kGAAoC;;;ADvI/E,MAAM,oBAAoB;IA0ChC,YAAoB,MAAoB,EAAS,EAAe,EAAS,MAAc,EAAS,WAAuB,EAAS,MAAoB;QAAhI,WAAM,GAAN,MAAM,CAAc;QAAS,OAAE,GAAF,EAAE,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAY;QAAS,WAAM,GAAN,MAAM,CAAc;QAvCpJ,YAAO,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAChC,YAAO,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;QAmC3C,WAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACxC,cAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;IAE+G,CAAC;IArCzJ,UAAU;QACT,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;YAC3C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YAC5C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,sBAAsB,EAAE,CAAC;SACvD;QACD,IAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAC;YAC1B,IAAI,GAAG,GAAG;gBACT,EAAE,EAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC;gBACjC,uCAAuC;gBACvC,MAAM,EAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU;gBACzC,KAAK,EAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK;gBACnC,GAAG,EAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG;gBAC/B,IAAI,EAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI;gBACjC,MAAM,EAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM;gBACrC,IAAI,EAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI;gBACjC,KAAK,EAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK;gBACnC,OAAO,EAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO;gBACvC,OAAO,EAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO;aACvC;YACD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;gBAC9C,IAAG,GAAG,CAAC,SAAS,CAAC,EAAC;oBAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;oBACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;iBACjC;qBACG;oBACF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;iBACpC;YACA,CAAC,EACD,CAAC,GAAG,EAAC,EAAE;gBACR,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YACvC,CAAC,CAAC;SACJ;IACF,CAAC;IAOD,QAAQ;QAEP,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,wCAAwC;YACxC,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1D,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3E,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACpF,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC/F,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACtD,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC/C,CAAC,CAAC;IACJ,CAAC;IAED,MAAM;QACL,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;;wFA/DW,oBAAoB;oGAApB,oBAAoB;QCZjC,yEACI;QAAA,yEACI;QACA,yEACI;QAAA,sEACI;QAAA,oEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,uEAAsB;QAAnB,uIAAS,YAAQ,IAAC;QAAC,uDAAwB;;QAAA,4DAAI;QACtD,4DAAM;QACV,4DAAM;QACN,wEACI;QAAA,wDACJ;;QAAA,4DAAK;QACL,2EACI;QADwD,iJAAY,gBAAY,IAAC;QACjF,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,gFACI;QAAA,qFAA6B;QAAA,wDAAuB;;QAAA,4DAAgB;QACpE,uFACI;QAAA,wEACA;QAAA,+MACI;QAIR,4DAAkB;QACtB,4DAAe;QACnB,4DAAM;QACN,2EACI;QAAA,gFACI;QAAA,qFAAkC;QAAA,wDAAwB;;QAAA,4DAAgB;QAC1E,uFACI;QAAA,wEAEA;QAAA,+MACI;QAOR,4DAAkB;QACtB,4DAAe;QACnB,4DAAM;QACN,2EACI;QAAA,gFACI;QAAA,qFAA6B;QAAA,wDAA6B;;QAAA,4DAAgB;QAC1E,uFACI;QAAA,wEACA;QAAA,+MACI;QAOR,4DAAkB;QACtB,4DAAe;QACf,gFACI;QAAA,qFAA4B;QAAA,wDAA4B;;QAAA,4DAAgB;QACxE,uFACI;QAAA,wEACA;QAAA,+MACI;QAIR,4DAAkB;QACtB,4DAAe;QACf,gFACI;QAAA,qFAA2B;QAAA,wDAAqB;;QAAA,4DAAgB;QAChE,uFACI;QAAA,wEACA;QAAA,+MACI;QAUR,4DAAkB;QACtB,4DAAe;QACnB,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,gFACI;QAAA,qFAAgC;QAAA,wDAAwB;;QAAA,4DAAgB;QACxE,uFACI;QAAA,wEACA;QAAA,+MACI;QAIR,4DAAkB;QACtB,4DAAe;QACf,gFACI;QAAA,qFAA4B;QAAA,wDAAsB;;QAAA,4DAAgB;QAClE,uFACI;QAAA,wEACA;QAAA,+MACI;QAIR,4DAAkB;QACtB,4DAAe;QACnB,4DAAM;QACN,2EACI;QAAA,gFACI;QAAA,qFAA6B;QAAA,wDAAuB;;QAAA,4DAAgB;QACpE,uFACI;QAAA,wEACA;QAAA,+MACI;QAIR,4DAAkB;QACtB,4DAAe;QACf,gFACI;QAAA,qFAA+B;QAAA,wDAAwB;;QAAA,4DAAgB;QACvE,uFACI;QAAA,wEACA;QAAA,+MACI;QAIR,4DAAkB;QACtB,4DAAe;QACnB,4DAAM;QACN,2EACI;QAAA,gFACI;QAAA,qFAA+B;QAAA,wDAAyB;;QAAA,4DAAgB;QACxE,uFACI;QAAA,wEACA;QAAA,iNACI;QAIR,4DAAkB;QACtB,4DAAe;QACnB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,wEACI;QAAA,6EAAuC;QAAA,yDAAmD;;QAAA,4DAAO;QACjG,6EAAsB;QAAA,yDAAsB;;QAAA,4DAAO;QACvD,4DAAM;QACN,0EAAkC;QAAA,yDAA4B;;QAAA,4DAAI;QACtE,4DAAM;QACN,+EAA+C;QAAA,yDAAiC;;QAAA,4DAAS;QAC7F,4DAAO;QACX,4DAAM;QACV,4DAAM;;;;;;;;;;;;QA9JgC,0DAAwB;QAAxB,2IAAwB;QAIlD,0DACJ;QADI,6JACJ;QACc,0DAA0B;QAA1B,uFAA0B;QACxB,0DAAe;QAAf,wEAAe;QAIkB,0DAAuB;QAAvB,2IAAuB;QACnC,0DAA4B;QAA5B,2EAA4B;QAYX,0DAAwB;QAAxB,4IAAwB;QACzC,0DAA2B;QAA3B,2EAA2B;QAgBf,0DAA6B;QAA7B,iJAA6B;QACzC,0DAA4B;QAA5B,2EAA4B;QAajB,0DAA4B;QAA5B,gJAA4B;QACvC,0DAA2B;QAA3B,2EAA2B;QAUjB,0DAAqB;QAArB,yIAAqB;QAC/B,0DAA0B;QAA1B,2EAA0B;QAoBX,0DAAwB;QAAxB,4IAAwB;QACvC,0DAA6B;QAA7B,4EAA6B;QAUlB,0DAAsB;QAAtB,0IAAsB;QACjC,0DAA2B;QAA3B,4EAA2B;QAYf,0DAAuB;QAAvB,2IAAuB;QACnC,0DAA4B;QAA5B,4EAA4B;QAUd,0DAAwB;QAAxB,4IAAwB;QACtC,0DAA8B;QAA9B,4EAA8B;QAYhB,0DAAyB;QAAzB,6IAAyB;QACvC,0DAA8B;QAA9B,4EAA8B;QAchB,0DAAmD;QAAnD,kMAAmD;QACpE,0DAAsB;QAAtB,2IAAsB;QAE7C,0DAA8B;QAA9B,8IAA8B;QAAC,0DAA4B;QAA5B,iJAA4B;QAEhD,0DAAoB;QAApB,6EAAoB;QAAS,0DAAiC;QAAjC,sJAAiC;;6FDvJ/E,oBAAoB;cALhC,uDAAS;eAAC;gBACV,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC5C;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAU3C,MAAM,cAAc;IAGvB,YACY,WAAwB,EACxB,OAAyB,EACzB,MAAc,EACd,KAAqB;QAHrB,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAkB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;IAC9B,CAAC;IAEJ,QAAQ;QACJ,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,WAAW;QACP,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7C,IAAI,GAAG,CAAC,SAAS,CAAC,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrC,YAAY,CAAC,KAAK,EAAE,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;aACzC;iBAAM;gBACH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;aACtC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;4EAzBQ,cAAc;8FAAd,cAAc;QCV3B,yEACI;QAAA,yEACI;QAAA,oEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEACA;QAAA,wEAA6B;QAAA,uFAA4B;QAAA,4DAAK;QAC9D,uEAA2B;QAAA,2HAA+D;QAAA,4DAAI;QAClG,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;6FDHO,cAAc;cAL1B,uDAAS;eAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACxC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAIT;;;;;;;;;;;;;;;;;ICJvD,kEAAuE;;IAA5D,6EAAoB;;;IADnC,yEACI;IAAA,6GAAmE;IACvE,4DAAM;;;IAD8B,0DAAkB;IAAlB,mFAAkB;;;IAe9B,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,2JACJ;;;IACA,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,yJACJ;;;IALA,mJACI;IAEJ,mJACI;;;IAJU,8FAAiC;IAGjC,0DAAoC;IAApC,iGAAoC;;;;IAhB1E,yEACI;IAAA,yEACI;IAAA,oEAA6B;IAC7B,wEAA6B;IAAA,uDAAqC;;IAAA,4DAAK;IACvE,uEACI;IAAA,uDACJ;;IAAA,4DAAI;IACJ,2EACI;IADqC,oTAAqB;IAC1D,gFACI;IAAA,qFAA6B;IAAA,wDAAyB;;IAAA,4DAAgB;IACtE,uFACI;IAAA,wEACA;IAAA,gNACI;IAOR,4DAAkB;IACtB,4DAAe;IACf,8EACI;IAAA,wDACJ;;IAAA,4DAAS;IACb,4DAAO;IACP,2EACI;IAAA,yEAA4B;IAAA,wDAA2B;;IAAA,4DAAI;IAC/D,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IA3B+B,0DAAqC;IAArC,uJAAqC;IAE9D,0DACJ;IADI,kKACJ;IACc,0DAA0B;IAA1B,0FAA0B;IAEH,0DAAyB;IAAzB,6IAAyB;IACrC,0DAA4B;IAA5B,2EAA4B;IAYW,0DAAoB;IAApB,6EAAoB;IAC5E,0DACJ;IADI,0JACJ;IAG4B,0DAA2B;IAA3B,+IAA2B;;ADjB5D,MAAM,eAAe;IAGxB,YACY,EAAe,EACf,WAAwB,EACxB,MAAqB,EACrB,MAAc,EACd,WAAuB;QAJvB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAY;QA0BnC,eAAU,GAAG,KAAK,CAAC;IAzBhB,CAAC;IAEJ,QAAQ;QACJ,IAAI,QAAQ,GAAG,IAAI,wEAAY,CAAC;QAChC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,MAAM;QACF,IAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,EAAC;YACrC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;SACjD;aACG,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAC7B,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAC9D,CAAC,IAAI,EAAE,EAAE;gBACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACzC,CAAC,EACF,CAAC,GAAG,EAAE,EAAE;gBACJ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5C,CAAC,CACJ,CAAC;SACL;IACL,CAAC;IAID,WAAW;QACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;;YACzC,IAAG,GAAG,CAAC,SAAS,CAAC,EAAC;gBACd,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC/B,IAAG,WAAI,CAAC,WAAW,0CAAE,sBAAsB,KAAI,IAAI,EAAC;oBAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;oBACxC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;iBAC3B;qBACG;oBACA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;wBAChC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;qBACzD,CAAC,CAAC;iBACR;aACA;YACD,mCAAmC;QAErC,CAAC,CAAC,CAAC;IAET,CAAC;;8EAxDM,eAAe;+FAAf,eAAe;QCb5B,2GACI;QAEJ,6GACI;;QAJC,gFAAkB;QAGG,0DAAmB;QAAnB,iFAAmB;;6FDUhC,eAAe;cAL3B,uDAAS;eAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACzC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAKT;AAED;;;;;;;;;;;;;;;;;;;ICPtD,kEAAuE;;IAA5D,6EAAoB;;;IADnC,yEACI;IAAA,4GAAmE;IACvE,4DAAM;;;IAD8B,0DAAkB;IAAlB,mFAAkB;;;;IAoB9B,wEACqD;IAAjD,2VAA4C;IAAC,4DAAI;;;IAD1C,oHAAoD;;;;IAlBvF,yEACI;IAAA,yEACI;IAAA,oEAA6B;IAC7B,0EACI;IADkC,kTAAoB;IACtD,+EACI;IAAA,mFAA6B;IAAA,uDAAyB;;IAAA,4DAAgB;IACtE,sFACI;;IAAA,wEACJ;IAAA,4DAAkB;IACtB,4DAAe;IACf,gFACI;IAAA,qFAAgC;IAAA,wDAA0B;;IAAA,4DAAgB;IAC1E,uFACI;;IAAA,sFACI;IAAA,6EAEJ;IAD4C,8UAAsB;IAD9D,4DAEJ;IAAA,4DAAiB;IACjB,+MACI;IAGR,4DAAkB;IACtB,4DAAe;IACf,oFACI;IAAA,6EACI;IAAA,wEAAM;IAAA,wDAA0B;;IAAA,4DAAO;IAC3C,4DAAQ;IACR,yEAAiD;IAAA,wDAAoC;;IAAA,4DAAI;IAC7F,4DAAe;IACf,8EACI;IAAA,wDACJ;;IAAA,4DAAS;IACb,4DAAO;IACP,2EACI;IAAA,wEAAM;IAAA,8DAAE;IAAA,4DAAO;IACnB,4DAAM;IACN,yEAA6E;IAA/C,mTAAwB;IAAuB,uEACzC;IAAA,wDACpC;;IAAA,4DAAI;IACJ,2EACI;IAAA,wDAA8B;;IAAA,yEAA6B;IAAA,wDAA0B;;IAAA,4DAAI;IAC7F,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IAxCgB,0DAAuB;IAAvB,uFAAuB;IAEA,0DAAyB;IAAzB,4IAAyB;IACrC,0DAAyC;IAAzC,iKAAyC;IAK1B,0DAA0B;IAA1B,8IAA0B;IACzC,0DAA4C;IAA5C,qKAA4C;IACzC,0DAA2B;IAA3B,yEAA2B;IAChC,0DAA8C;IAA9C,8GAA8C;IAWnD,0DAA0B;IAA1B,8IAA0B;IAEa,0DAAoC;IAApC,wJAAoC;IAE7B,0DAAuB;IAAvB,uFAAuB;IAC/E,0DACJ;IADI,sJACJ;IAMgC,0DACpC;IADoC,4JACpC;IAEI,0DAA8B;IAA9B,4JAA8B;IAA6B,0DAA0B;IAA1B,8IAA0B;;AD3B1F,MAAM,cAAc;IAKvB,YACY,SAA2B,EAC3B,EAAe,EACf,WAAwB,EACxB,MAAqB,EACrB,MAAqB,EACrB,MAAc,EACd,WAAuB;QANvB,cAAS,GAAT,SAAS,CAAkB;QAC3B,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAY;QAXnC,oBAAe,GAAG,KAAK,CAAC;QAGxB,cAAS,GAAG,KAAK,CAAC;QAqDlB,eAAU,GAAG,KAAK,CAAC;IA5ChB,CAAC;IAEJ,QAAQ;QACJ,IAAI,QAAQ,GAAG,IAAI,wEAAY,CAAC;QAChC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,KAAK;QACD,IAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,EAAC;YAC3E,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;SAC/C;aACG,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,GAAG,GAAG;gBACN,KAAK,EAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE;gBAC9C,QAAQ,EAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ;aACzC;YACI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,CAClC,CAAC,IAAI,EAAE,EAAE;gBACL,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;oBACd,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;oBACvD,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;iBAC9C;gBACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACxB,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC;gBACvD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,+EAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC3D,QAAQ,CAAC,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC;YAC9D,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;gBACJ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBACrC,YAAY,CAAC,KAAK,EAAE,CAAC;YACzB,CAAC,CACJ,CAAC;SACL;IACL,CAAC;IAED,YAAY;QACR,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IACpC,CAAC;IAID,WAAW;QACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;;YACzC,IAAG,GAAG,CAAC,SAAS,CAAC,EAAC;gBACd,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC/B,IAAG,WAAI,CAAC,WAAW,0CAAE,sBAAsB,KAAI,IAAI,EAAC;oBAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;oBACxC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;iBAC3B;qBACG;oBACA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC;oBAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;wBAC3B,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;wBACtD,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;wBACvC,QAAQ,EAAE,CAAC,KAAK,CAAC;qBACpB,CAAC,CAAC;iBACN;aACJ;YACD,mCAAmC;QAErC,CAAC,CAAC,CAAC;IAET,CAAC;;4EAlFM,cAAc;8FAAd,cAAc;QChB3B,0GACI;QAEJ,4GACI;;QAJC,gFAAkB;QAGG,0DAAmB;QAAnB,iFAAmB;;6FDahC,cAAc;cAL1B,uDAAS;eAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACxC;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAGJ;AAGL;;;;;;;;;;;;;;;;ICWnC,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,uJACJ;;;IACA,wEACG;IAAA,uDACH;;IAAA,qEAAe;;IADZ,0DACH;IADG,uJACH;;;IALA,0IACI;IAEJ,0IACG;;;IAJW,gGAAmC;IAGnC,0DAAoC;IAApC,iGAAoC;;ADRnE,MAAM,YAAY;IAGrB,YACY,EAAe,EACf,WAAwB,EACxB,MAAc,EACd,MAAqB,EACrB,MAAqB;QAJrB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAe;IAC9B,CAAC;IAEJ,QAAQ;QACJ,IAAI,QAAQ,GAAG,IAAI,wEAAY,CAAC;QAChC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,EAAE;YAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAE1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACzB,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,6EAAY,CAAC,CAAC;SACnD,CAAC,CAAC;IACP,CAAC;IAED,KAAK;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACpB,IAAI,CAAC,WAAW;iBACX,QAAQ,CAAC;gBACN,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;gBAChC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG;aAC9B,CAAC;iBACD,SAAS,CACN,CAAC,IAAI,EAAE,EAAE;gBACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5B,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;gBACJ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5C,CAAC,CACJ,CAAC;SACT;IACL,CAAC;;wEAvCQ,YAAY;4FAAZ,YAAY;QCbzB,yEACI;QAAA,yEACI;QAAA,oEAA6B;QAC7B,0EACI;QADgC,wIAAY,WAAO,IAAC;QACpD,+EACI;QAAA,mFACK;QAAA,uDAA6B;;QAAA,4DACjC;QACD,qFACI;QAAA,sEAQA;QAAA,sMACI;QAOR,4DAAkB;QACtB,4DAAe;QACf,6EAKI;QAAA,wDACJ;;QAAA,4DAAS;QACb,4DAAO;QACP,0EACI;QAAA,yEAA4B;QAAA,wDAA2B;;QAAA,4DAAI;QAC/D,4DAAM;QACV,4DAAM;QACV,4DAAM;;;QApCgB,0DAAqB;QAArB,kFAAqB;QAGtB,0DAA6B;QAA7B,+IAA6B;QAEjB,0DAA0B;QAA1B,2EAA0B;QAsB3C,0DAAoB;QAApB,6EAAoB;QAEpB,0DACJ;QADI,sJACJ;QAG4B,0DAA2B;QAA3B,+IAA2B;;6FDvBtD,YAAY;cALxB,uDAAS;eAAC;gBACP,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACtC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;;;;;;;;;;;ICC9C,kEAAuE;;IAA5D,6EAAoB;;;IADnC,yEACI;IAAA,4GAAmE;IACvE,4DAAM;;;IAD8B,0DAAkB;IAAlB,mFAAkB;;;IA0E9B,wEAAgD;IAAA,uDAAe;IAAA,4DAAI;;;IAAnB,0DAAe;IAAf,6FAAe;;;;IAT3E,0EACI;IAAA,0EACI;IAAA,0EACI;IAAA,qEACJ;IAAA,4DAAM;IACN,0EACI;IAAA,uDACJ;;IAAA,4DAAM;IACN,0EACI;IAAA,oHAAgD;IAChD,uDACJ;IAAA,4DAAM;IACN,2EACI;IAAA,wDACJ;IAAA,4DAAM;IACN,2EACI;IAAA,yEACqB;IADlB,kYAAsD;IACpC,wDAA4B;;IAAA,4DAAI;IACzD,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAdM,0DACJ;IADI,0JACJ;IAE6B,0DAAsB;IAAtB,mFAAsB;IAC/C,0DACJ;IADI,qIACJ;IAEI,0DACJ;IADI,mKACJ;IAGyB,0DAA4B;IAA5B,+IAA4B;;;;IAhFzE,yEACI;IAAA,yEACI;IAAA,yEACI;IAAA,sEACI;IAAA,qEACJ;IAAA,4DAAM;IACN,0EACI;IAAA,wEAAsB;IAAnB,6SAAkB;IAAC,uDAAwB;;IAAA,4DAAI;IACtD,4DAAM;IACV,4DAAM;IACN,yEAA8C;IAAA,wDAA8B;;IAAA,4DAAK;IACjF,yEACI;IAAA,wDACJ;;IAAA,4DAAK;IACL,qEAAG;IAAA,wDACH;;IAAA,4DAAI;IACJ,2EACI;IAAA,0EAA8C;IAAA,wDAAgC;;IAAA,4DAAK;IACnF,2EACI;IAAA,2EACI;IAAA,0EACI;IAAA,sEACI;IAAA,4EAA0C;IAC1C,wEAAM;IAAA,wDAAkC;;IAAA,4DAAO;IACnD,4DAAK;IACL,sEACI;IAAA,4EAAsC;IACtC,wEAAM;IAAA,wDAAgC;;IAAA,4DAAO;IACjD,4DAAK;IACT,4DAAK;IACT,4DAAM;IACN,2EACI;IAAA,0EACI;IAAA,sEACI;IAAA,4EAAqC;IACrC,wEAAM;IAAA,wDAAiC;;IAAA,4DAAO;IAClD,4DAAK;IACL,sEACI;IAAA,4EAA6C;IAC7C,wEAAM;IAAA,wDAA4B;;IAAA,4DAAO;IAC7C,4DAAK;IACT,4DAAK;IACT,4DAAM;IACN,2EACI;IAAA,0EACI;IAAA,sEACI;IAAA,4EAAoC;IACpC,wEAAM;IAAA,wDAA+B;;IAAA,4DAAO;IAChD,4DAAK;IACL,sEACI;IAAA,4EAAwC;IACxC,wEAAM;IAAA,wDAA8B;;IAAA,4DAAO;IAC/C,4DAAK;IACT,4DAAK;IACT,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IACA,0EAAyC;IAAA,wDACzC;;IAAA,4DAAK;IACT,4DAAM;IACN,2EACI;IAAA,qHACI;IAqBJ,2EACI;IAAA,yEAAiB;IAAA,wDAAkD;;;IAAA,4DAAI;IAC3E,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAnFgC,0DAAwB;IAAxB,2IAAwB;IAGR,0DAA8B;IAA9B,kJAA8B;IAExE,0DACJ;IADI,4JACJ;IACG,0DACH;IADG,+JACH;IAEkD,0DAAgC;IAAhC,oJAAgC;IAClE,0DAAe;IAAf,wEAAe;IAKL,0DAAkC;IAAlC,sJAAkC;IAIlC,0DAAgC;IAAhC,oJAAgC;IAQhC,0DAAiC;IAAjC,qJAAiC;IAIjC,0DAA4B;IAA5B,gJAA4B;IAQ5B,0DAA+B;IAA/B,mJAA+B;IAI/B,0DAA8B;IAA9B,kJAA8B;IAQX,0DACzC;IADyC,0JACzC;IAEQ,0DAAe;IAAf,wEAAe;IACqC,0DAA+B;IAA/B,sFAA+B;IAuBtE,0DAAkD;IAAlD,wOAAkD;;;IAoB/D,4EACI;IAAA,2EAAyB;IAAA,uDAAwB;;IAAA,4DAAO;IAC5D,4DAAQ;;IADqB,0DAAwB;IAAxB,0IAAwB;;;;IAZrE,sEACI;IAAA,0EACI;IAAA,qEACJ;IAAA,4DAAM;IACN,0EACI;IACA,0EACI;IAAA,2EAAiC;IAAA,uDAA+B;;IAAA,4DAAO;IAC3E,4DAAM;IACN,0EACI;IAAA,qFACI;IADY,6VAA0B;IACtC,uHACI;IAEJ,6EACI;IAAA,4EAAyB;IAAA,wDAAqB;;IAAA,4DAAO;IAAA,4DAAQ;IACrE,4DAAiB;IACrB,4DAAM;IACN,2EACI;IAAA,8EACoC;IAAhC,gUAA+B;IAAC,wDAAwB;;IAAA,4DAAS;IACrE,8EAC0C;IAAtC,8UAAqC;IAAC,wDAA0B;;IAAA,4DAAS;IACjF,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAlBuC,0DAA+B;IAA/B,iJAA+B;IAGhD,0DAA0B;IAA1B,wFAA0B;IACL,0DAAqD;IAArD,oIAAqD;IAIzD,0DAAqB;IAArB,0IAAqB;IAInB,0DAAkB;IAAlB,2EAAkB;IACjB,0DAAwB;IAAxB,4IAAwB;IACzB,0DAAkB;IAAlB,2EAAkB;IACX,0DAA0B;IAA1B,8IAA0B;;;IAmBhE,wEACI;IAAA,wEAAmC;IAAA,uDAAyB;;IAAA,4DAAI;IACpE,4DAAI;;IADmC,0DAAyB;IAAzB,2IAAyB;;;IAFpE,wEACI;IAAA,mIACI;IAER,qEAAe;;;IAHmC,0DAA8B;IAA9B,gGAA8B;;;IAFpF,0EACI;IAAA,yIACI;IAIR,4DAAM;;;IALY,0DAA4B;IAA5B,8FAA4B;;;IAQtC,4EAII;IAAA,0EACI;IAAA,0EACI;IAAA,qEAEJ;IAAA,4DAAM;IACN,sEACI;IAAA,sEACI;IACA,2EAAoB;IAAA,uDAA2B;IAAA,4DAAO;IAC1D,4DAAM;IACN,0EAAwB;IAAA,uDAAc;IAAA,4DAAM;IAC5C,uEAAK;IAAA,wDAAkB;IAAA,4DAAM;IACjC,4DAAM;IACV,4DAAM;IACV,4DAAQ;;;;IAlBQ,4FAAsB;IAYF,0DAA2B;IAA3B,sGAA2B;IAE3B,0DAAc;IAAd,+EAAc;IACjC,0DAAkB;IAAlB,qGAAkB;;;IAKvC,wEAAiE;IAAA,uDAA+B;;IAAA,4DAAI;;IAAnC,0DAA+B;IAA/B,iJAA+B;;;;IAGhG,6EACiC;IADqB,0UAA+B;IACpD,uDAAwB;;IAAA,4DAAS;;IAD/B,2EAAkB;IACpB,0DAAwB;IAAxB,0IAAwB;;;;IACzD,6EAC8B;IAA1B,4UAAyB;IAAC,uDAAsB;;IAAA,4DAAS;;IAD1B,2EAAkB;IACvB,0DAAsB;IAAtB,wIAAsB;;;;IA/ChE,sEACI;IAAA,0EACI;IAAA,0EACI;IAAA,6EACI;IADsC,gTAAiB,SAAS,IAAC;IACjE,2EAAyC;IAC7C,4DAAS;IACb,4DAAM;IACN,yEACI;IAAA,0EAAgC;IAAA,uDAA6B;;IAAA,4DAAM;IACvE,4DAAM;IACV,4DAAM;IACN,0EACI;IAAA,mHACI;IAMJ,2EACI;IAAA,sFACI;IADY,4VAAwB;IACpC,wHAII;IAeR,4DAAiB;IACjB,+GAAiE;IACrE,4DAAM;IACN,2EACI;IAAA,yHACiC;IACjC,yHAC8B;IAClC,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA1CsC,0DAA6B;IAA7B,+IAA6B;IAIjC,0DAA4B;IAA5B,6FAA4B;IAQxC,0DAAwB;IAAxB,sFAAwB;IACG,0DAGtC;IAHsC,sFAGtC;IAiB8B,0DAA6B;IAA7B,8FAA6B;IAI5D,0DAA4B;IAA5B,6FAA4B;IACsB,0DAA4B;IAA5B,6FAA4B;;AD7J3F,MAAM,cAAc;IAuEzB,YAAoB,MAAoB,EAAS,cAA8B,EAAU,MAAc,EAC7F,aAA4B,EAAU,WAAwB,EAAU,MAAqB,EAAS,WAAuB;QADnH,WAAM,GAAN,MAAM,CAAc;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC7F,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAY;QAtEvI,eAAU,GAAG,EAAE,CAAC;QAEhB,kBAAa,GAAG,CAAC,CAAC;QAClB,WAAM,GAAG,CAAC,CAAC;QACX,cAAS,GAAG,CAAC,CAAC;QACd,kBAAa,GAAG,CAAC,CAAC;QAClB,QAAG,GAAG,CAAC,CAAC;QACR,cAAS,GAAG,CAAC,CAAC;QACd,eAAU,GAAG,EAAE,CAAC;QAEhB,iBAAY,GAAG,KAAK,CAAC;QAErB,gBAAgB;QAChB,iBAAY,GAAG,QAAQ,CAAC;QAExB,uBAAuB;QACvB,eAAU,GAAG,KAAK,CAAC;QAEnB,uBAAuB;QACvB,eAAU,GAAG,OAAO,CAAC;QAErB,4BAA4B;QAC5B,YAAO,GAAG,SAAS,CAAC;QAKpB,oBAAoB;QACpB,qBAAgB,GAAG,KAAK,CAAC;QAoIzB,eAAU,GAAG,KAAK,CAAC;IA1FwH,CAAC;IAzC5I,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC;QACtB,IAAI,OAAW,CAAC;QAChB,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QACtB,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3C,YAAY,CAAC,OAAO,CAAC,OAAO,EAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC3C,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAC,OAAO,CAAC;QACtC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;YACpB,IAAI,GAAG,GAAG;gBACR,EAAE,EAAC,IAAI,CAAC,MAAM;aACf;YACD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;gBAC7C,IAAG,GAAG,CAAC,SAAS,CAAC,EAAC;oBAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;oBACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;iBACjC;qBACG;oBACF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;iBACpC;YACH,CAAC,EACD,CAAC,GAAG,EAAC,EAAE;gBACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1C,CAAC,CAAC;SACH;aACI;YACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC9B;IACH,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAClB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAClB,CAAC;IAKD,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IAErB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9C,IAAI,GAAG,CAAC,SAAS,CAAC,EAAE;gBAClB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;oBACjC,OAAO,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBAC3B,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,MAAM;QACjB,IAAI,MAAM,IAAI,MAAM,EAAE;YACrB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;aACI;YACH,IAAI,GAAG,GAAG;gBACR,EAAE,EAAE,IAAI,CAAC,MAAM;gBACf,MAAM,EAAE,IAAI;aACb;YACD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;gBAC7C,IAAG,GAAG,CAAC,SAAS,CAAC,EAAC;oBAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;oBACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;iBACjC;qBACG;oBACF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;iBACpC;YACH,CAAC,EACD,CAAC,GAAG,EAAC,EAAE;gBACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1C,CAAC,CAAC;YACF,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC/B;IACH,CAAC;IAED,GAAG,CAAC,IAAI;QACN,IAAI,GAAG,GAAG;YACR,EAAE,EAAE,IAAI,CAAC,MAAM;YACf,OAAO,EAAC,IAAI;SACb;QACD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;YAC7C,IAAG,GAAG,CAAC,SAAS,CAAC,EAAC;gBAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACpC;iBACG;gBACF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;aACpC;QACH,CAAC,EACD,CAAC,GAAG,EAAC,EAAE;YACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClD,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;aAC7C;QACH,CAAC,CAAC;IACJ,CAAC;IACD,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClD,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC/B,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;oBAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;iBAC1B;aACF;QACH,CAAC,EACC,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvC,CAAC,CACF,CAAC;IACJ,CAAC;IACD,MAAM;QACN,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;IAIC,WAAW;QACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;;YACzC,IAAG,GAAG,CAAC,SAAS,CAAC,EAAC;gBACd,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC/B,IAAG,WAAI,CAAC,WAAW,0CAAE,sBAAsB,KAAI,IAAI,EAAC;oBAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;oBACxC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;iBAC3B;qBACG;oBACA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,IAAI,CAAC,UAAU,EAAE,CAAC;oBACpC,IAAI,CAAC,OAAO,EAAE,CAAC;iBAEJ;aACA;YACD,mCAAmC;QAErC,CAAC,CAAC,CAAC;IAET,CAAC;;4EAxLM,cAAc;8FAAd,cAAc;QCd3B,0GACI;QAEJ,4GACI;QA4FJ,8EAEI;QAF4D,mMAAgC;QAE5F,4GACI;QA0BJ,2GACI;QAmDR,4DAAW;;QAjLN,gFAAkB;QAGG,0DAAmB;QAAnB,iFAAmB;QA6FmB,0DAAgC;QAAhC,2FAAgC;QAEvF,0DAA6B;QAA7B,2FAA6B;QA2B7B,0DAA0B;QAA1B,wFAA0B;;6FD/GtB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAM1B;AAImC;;;;;;;;;;;;;;;;;ICTvD,kEAAuE;;IAA5D,6EAAoB;;;IADnC,yEACI;IAAA,4GAAmE;IACvE,4DAAM;;;IAD8B,0DAAkB;IAAlB,mFAAkB;;;IAiB9B,wEACI;IAAA,uDAAiC;;IAAA,qEAAe;;IAAhD,0DAAiC;IAAjC,6JAAiC;;;IACrC,wEAAoD;IAAA,uDACpD;;IAAA,qEAAe;;IADqC,0DACpD;IADoD,4JACpD;;;IAHA,kJACI;IACJ,kJAAoD;;;IAFtC,gGAAmC;IAEnC,0DAAoC;IAApC,iGAAoC;;;IAWlD,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,mKACJ;;;IACA,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,mKACJ;;;IALA,kJACI;IAEJ,kJACI;;;IAJU,kGAAoC;IAGpC,0DAAmC;IAAnC,iGAAmC;;;;IA/BzE,yEACI;IAAA,yEACI;IAAA,yEACI;IAAA,yEACI;IAAA,oEAEA;IAAA,yEAA6B;IAAA,uDAA+B;;IAAA,4DAAK;IACrE,4DAAM;IACV,4DAAM;IACN,2EACI;IADqC,qTAAoB;IACzD,+EACI;IAAA,qFAA+C;IAAA,wDAA0B;;IAAA,4DAAgB;IACzF,uFACI;IAAA,wEACA;IAAA,+MACI;IAKR,4DAAkB;IACtB,4DAAe;IACf,gFACI;IAAA,qFAAsD;IAAA,wDAAiC;;IAAA,4DAAgB;IACvG,uFACI;IAAA,wEAEA;IAAA,+MACI;IAOR,4DAAkB;IACtB,4DAAe;IACf,gFACI;IAAA,mFACI;IAAA,8EACI;IAAA,wDACJ;;IAAA,4DAAS;IACb,4DAAkB;IACtB,4DAAe;IACnB,4DAAO;IACX,4DAAM;IA7CV,4DACI;;;;;IAKyC,0DAA+B;IAA/B,iJAA+B;IAGtD,0DAA0B;IAA1B,0FAA0B;IAEe,0DAA0B;IAA1B,8IAA0B;IACxD,0DAAyB;IAAzB,2EAAyB;IAWY,0DAAiC;IAAjC,qJAAiC;IACtE,0DAAuB;IAAvB,2EAAuB;IAekC,0DAAoB;IAApB,6EAAoB;IACtF,0DACJ;IADI,2JACJ;;AD1Bb,MAAM,cAAc;IAIvB,YACY,EAAe,EACf,IAAiB,EACjB,MAAqB,EACrB,MAAc,EACd,KAAqB,EACrB,WAAuB;QALvB,OAAE,GAAF,EAAE,CAAa;QACf,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAY;QAenC,qBAAgB,GAAG,CAAC,OAAoB,EAA4B,EAAE;YAClE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAChB,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;aAC1C;iBAAM,IACH,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAC7D;gBACE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;aACzC;YACD,OAAO,EAAE,CAAC;QACd,CAAC,CAAC;QAEF,sBAAiB,GAAG,CAAC,OAAoB,EAA4B,EAAE;YACnE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAChB,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;aAC1C;YACD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,CAAC,sBAAsB,EAAE,CAAC;YACpE,OAAO,EAAE,CAAC;QACd,CAAC,CAAC;QA8BF,eAAU,GAAG,KAAK,CAAC;QA5Df,YAAY,CAAC,OAAO,CAChB,OAAO,EACP,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CACzC,CAAC;IACN,CAAC;IAED,QAAQ;QACH,IAAI,QAAQ,GAAG,IAAI,wEAAY,CAAC;QACjC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IAEvB,CAAC;IAqBD,KAAK;QACD,IAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAC;YACzB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC;SACxC;QACA,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAC1B,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC9D,IAAI,eAAe,KAAK,QAAQ,EAAE;gBAC9B,IAAI,CAAC,IAAI;qBACJ,aAAa,CAAC;oBACX,QAAQ;iBACX,CAAC;qBACD,SAAS,CACN,CAAC,GAAG,EAAE,EAAE;oBACJ,IAAI,GAAG,CAAC,SAAS,CAAC,EAAE;wBAChB,YAAY,CAAC,KAAK,EAAE,CAAC;wBACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;qBACzC;yBAAM;wBACH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;qBACrC;gBACL,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;oBACJ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC5C,CAAC,CACJ,CAAC;aACT;SACJ;IACL,CAAC;IAGD,WAAW;QACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;;YACzC,IAAG,GAAG,CAAC,SAAS,CAAC,EAAC;gBACd,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC/B,IAAG,WAAI,CAAC,WAAW,0CAAE,sBAAsB,KAAI,IAAI,EAAC;oBAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;oBACxC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;iBAC3B;qBACG;oBACA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;wBAChC,QAAQ,EAAE;4BACN,IAAI;4BACJ;gCACI,yDAAU,CAAC,QAAQ;gCACnB,yDAAU,CAAC,OAAO,CACd,kEAAkE,CACrE;gCACD,IAAI,CAAC,iBAAiB;6BACzB;yBACJ;wBACD,eAAe,EAAE;4BACb,IAAI;4BACJ,CAAC,yDAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC;yBAC/C;qBACJ,CAAC,CAAC;iBAER;aACA;YACD,mCAAmC;QAErC,CAAC,CAAC,CAAC;IAET,CAAC;;4EA5GM,cAAc;8FAAd,cAAc;QClB3B,0GACI;QAEJ,4GACI;;QAJC,gFAAkB;QAGG,0DAAmB;QAAnB,iFAAmB;;6FDehC,cAAc;cAL1B,uDAAS;eAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBiD;AAM1B;AAKmC;AACD;AAEb;AAEa;;;;;;;;;;;;;;;;;;;;;;ICftD,kEAAuE;;IAA5D,6EAAoB;;;IADnC,yEACI;IAAA,6GAAmE;IACvE,4DAAM;;;IAD8B,0DAAkB;IAAlB,mFAAkB;;;IAkB1B,wEACI;IAAA,wEAAsB;IAAA,uDAAsC;;IAAA,4DAAI;IACpE,qEAAe;;IADW,0DAAsC;IAAtC,wJAAsC;;;IAG5D,wEAII;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,8JACJ;;;IACA,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,8JACJ;;;IACA,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,4JACJ;;;IAXA,yJAII;IAEJ,yJACI;IAEJ,yJACI;;;IAVU,wIAGT;IAGS,0DAAmC;IAAnC,iGAAmC;IAGnC,0DAAoC;IAApC,kGAAoC;;;IAYlD,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,2JACJ;;;IACA,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,yJACJ;;;IALA,yJACI;IAEJ,yJACI;;;IAJU,+FAAiC;IAGjC,0DAAoC;IAApC,kGAAoC;;;IAmBtD,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,0JACJ;;;IAFA,yJACI;;;IADU,kGAAoC;;;IAU9C,2EACyC;;;IADQ,oFAAuB;;;IAIxE,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,2JACJ;;;IAFA,yJACI;;;IADU,kGAAoC;;;IAsBtD,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,+JACJ;;;IAFA,yJACI;;;IADU,kGAAoC;;;IAgB1C,gFAEI;IAAA,0EACI;IAAA,0EACI;IAAA,qEAEJ;IAAA,4DAAM;IACN,0EAAkB;IAAA,uDAAkB;IAAA,4DAAM;IAC9C,4DAAM;IACV,4DAAY;;;;IATe,uFAA0B;IAIpC,0DAAgC;IAAhC,8KAAgC;IAGvB,0DAAkB;IAAlB,mFAAkB;;;IAQhD,0EACI;IAAA,uDACJ;;IAAA,4DAAM;;IADF,0DACJ;IADI,0JACJ;;;IACA,0EACI;IAAA,uDACJ;;IAAA,4DAAM;;IADF,0DACJ;IADI,4JACJ;;;IANJ,sEACI;IAAA,+HACI;IAEJ,+HACI;IAER,4DAAM;;;IANqB,0DAAqD;IAArD,uHAAqD;IAGrD,0DAAoD;IAApD,sHAAoD;;;IAc3E,2EACmE;;;IADxD,oFAAuB;;;IAKtC,wEACI;IAAA,4EACJ;IAAA,qEAAe;;;IAFf,yJACI;;;IADU,kGAAoC;;;IAU9C,2EACqE;;;IAD1D,gFAAmB;;;IAKlC,wEACI;IAAA,4EACJ;IAAA,qEAAe;;;IAFf,yJACI;;;IADU,kGAAoC;;;IAU9C,2EACY;;;IADD,iFAAoB;;;IAKnC,wEACI;IAAA,gFACJ;IAAA,qEAAe;;;IAFf,0JACI;;;IADU,kGAAoC;;;;IAa9C,wEACqD;IAAjD,uWAA4C;IAAC,4DAAI;;;IAD1C,qHAAoD;;;IAI/D,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,8JACJ;;;IACA,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,4JACJ;;;IALA,0JACI;IAEJ,0JACI;;;IAJU,iGAAmC;IAGnC,0DAAoC;IAApC,kGAAoC;;;;IAgBlD,wEAIU;IAFJ,qXAED;IAAC,4DAAI;;;IAJC,4HAEN;;;IAKL,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,mKACJ;;;IACA,wEACI;IAAA,uDACJ;;IAAA,qEAAe;;IADX,0DACJ;IADI,mKACJ;;;IALA,0JACI;IAEJ,0JACI;;;IAJU,iGAAmC;IAGnC,0DAAoC;IAApC,kGAAoC;;;IAalE,uEAAqB;IAAA,uDAAuB;;IAAA,4DAAO;;IAA9B,0DAAuB;IAAvB,yIAAuB;;;IAC5C,uEAAwB;IAAA,uDAA0B;;IAAA,4DAAO;;IAAjC,0DAA0B;IAA1B,sJAA0B;;;IAM1D,0EACI;IAAA,uDACJ;;IAAA,4DAAM;;IADF,0DACJ;IADI,yJACJ;;;;IAEA,6EACI;IAD6H,qUAAkB;IAC/I,uDACJ;;IAAA,4DAAS;;;IAFmE,6EAAoB;IAC5F,0DACJ;IADI,uJACJ;;;;IACA,6EACI;IADqJ,qUAAkB;IACvK,uDACJ;;IAAA,4DAAS;;;IAFkE,6EAAoB;IAC3F,0DACJ;IADI,uJACJ;;;;IA/PJ,yEACI;IAAA,oEAA6B;IAC7B,yEACI;IAAA,uDACJ;;IAAA,4DAAK;IACL,2EACI;IAAA,0EACI;IAAA,0EACI;IAAA,+EACI;IAAA,oFAAgC;IAAA,wDAA0B;;IAAA,4DAAgB;IAC1E,uFACI;IAAA,6EAGA;IAFI,kWAAmD,WAAW,KAAE;IADpE,4DAGA;IAAA,4IACI;IAEJ,sNACI;IAaR,4DAAkB;IACtB,4DAAe;IACf,gFACI;IAAA,qFAA6B;IAAA,wDAAyB;;IAAA,4DAAgB;IACtE,uFACI;IAAA,6EAEA;IADI,0VAAuB;IAD3B,4DAEA;IAAA,sNACI;IAOR,4DAAkB;IACtB,4DAAe;IACf,gFACI;IAAA,qFAA6B;IAAA,wDAAwB;;IAAA,4DAAgB;IACrE,uFACI;IAAA,iFACI;IADO,wVAAiB;IACxB,4EAAsE;;IACtE,4EAA0E;;IAE1E,4EAAyE;;IACzE,4EACY;;IAChB,4DAAY;IAChB,4DAAkB;IAClB,sNACI;IAIR,4DAAe;IACf,gFACI;IAAA,qFAAgC;IAAA,wDAAyB;;IAAA,4DAAgB;IACzE,uFACI;IAAA,iFAEI;IAFyD,kWAA2B;IAEpF,sIAC6B;IACjC,4DAAY;IACZ,sNACI;IAIR,4DAAkB;IACtB,4DAAe;IACf,gFACI;IAAA,qFAA6B;IAAA,wDAAmC;;IAAA,4DAAgB;IAChF,uFACI;IAAA,iFAEI;IAFO,uWAAgC;IAGvC,4EAAuF;;IACvF,4EAA6E;;IAC7E,4EAAqE;;IACrE,4EAA+E;;IAC/E,4EAAqE;;IACrE,4EACY;;IAChB,4DAAY;IAChB,4DAAkB;IAClB,sNACI;IAIR,4DAAe;IACf,oFACI;IAAA,qFAA8B;IAAA,wDAAwB;;IAAA,4DAAgB;IACtE,mFACI;IAAA,sFACI;IAAA,2EACI;IAAA,sEACA;IAAA,2EAA0B;IAAA,wDAAgB;IAAA,4DAAM;IACpD,4DAAM;IACN,iFAGI;IAF+B,iWAA0B;IAEzD,sIAEI;IAQR,4DAAY;IACZ,wEAEJ;IAAA,4DAAiB;IACjB,0HACI;IAOR,4DAAkB;IACtB,4DAAe;IACnB,4DAAM;IACN,2EAEI;IAAA,gFACI;IAAA,qFAAgC;IAAA,oEAAQ;IAAA,4DAAgB;IACxD,uFACI;IAAA,iFAEI;IAFO,6VAAsB;IAE7B,sIACuD;IAC3D,4DAAY;IAChB,4DAAkB;IAClB,sNACI;IAIR,4DAAe;IACf,gFACI;IAAA,qFAA6B;IAAA,yEAAa;IAAA,4DAAgB;IAC1D,uFACI;IAAA,iFAEI;IAFO,iWAA0B;IAEjC,sIACyD;IAC7D,4DAAY;IAChB,4DAAkB;IAClB,sNACI;IAIR,4DAAe;IACf,iFACI;IAAA,sFAA6B;IAAA,yEAAY;IAAA,4DAAgB;IACzD,wFACI;IAAA,kFAEI;IAFO,6VAAqB;IAE5B,wIACA;IACJ,4DAAY;IAChB,4DAAkB;IAClB,wNACI;IAIR,4DAAe;IACf,iFACI;IAAA,sFAAgC;IAAA,yDAA0B;;IAAA,4DAAgB;IAC1E,wFACI;IAAA,uFACI;IAAA,8EAEJ;IAD4C,0VAAsB;IAD9D,4DAEJ;IAAA,4DAAiB;IACjB,wNACI;IAGJ,wNACI;IAOR,4DAAkB;IACtB,4DAAe;IACf,iFACI;IAAA,sFAAuC;IAAA,yDAAiC;;IAAA,4DAAgB;IACxF,wFACI;IAAA,uFACI;IAAA,8EAIJ;IADQ,iWAA6B;IAHjC,4DAIJ;IAAA,4DAAiB;IACjB,wNACI;IAMJ,wNACI;IAOR,4DAAkB;IACtB,4DAAe;IACnB,4DAAM;IACV,4DAAM;IAEV,4DAAO;IACP,4EACI;IAAA,yEAA8D;IAC9D,6EACI;IAAA,8HAAqB;IACrB,8HAAwB;IACxB,0EAAsD;IAAA,yDAAuB;;IAAA,4DAAI;IAClF,yDACC;;IAAA,0EAAwD;IAAA,yDAAyB;;IAAA,4DAAI;IACzF,4DAAO;IACX,4DAAM;IACN,4HACI;IAGJ,kIACI;IAEJ,kIACI;IAEJ,4EACI;IAAA,yDAA6B;;IAAA,0EAA4B;IAAA,yDAAuB;;IAAA,4DAAI;IACxF,4DAAM;IACV,4DAAM;;;;;;;;;;;;;;;IAhQE,0DACJ;IADI,0JACJ;IACc,0DAAwB;IAAxB,wFAAwB;IACtB,0DAAe;IAAf,wEAAe;IAGiB,0DAA0B;IAA1B,8IAA0B;IACzC,0DAA2B;IAA3B,2EAA2B;IAI1B,0DAA+B;IAA/B,gGAA+B;IAoBpB,0DAAyB;IAAzB,6IAAyB;IACrC,0DAA4B;IAA5B,2EAA4B;IAErC,0DAAuB;IAAvB,qFAAuB;IAYF,0DAAwB;IAAxB,4IAAwB;IACpC,0DAAwB;IAAxB,4EAAwB;IAC1B,0DAAiB;IAAjB,+EAAiB;IACC,0DAAgC;IAAhC,yJAAgC;IAC9B,0DAAkC;IAAlC,2JAAkC;IAElC,0DAAiC;IAAjC,0JAAiC;IACzB,0DAAyC;IAAzC,kKAAyC;IAWpD,0DAAyB;IAAzB,6IAAyB;IACxC,0DAAwB;IAAxB,4EAAwB;IACwB,0DAA2B;IAA3B,yFAA2B;IAEzE,0DAAqC;IAArC,0FAAqC;IAW3B,0DAAmC;IAAnC,uJAAmC;IAC/C,0DAA6B;IAA7B,4EAA6B;IAC/B,0DAAgC;IAAhC,8FAAgC;IAGL,0DAAwC;IAAxC,iKAAwC;IAC7C,0DAAmC;IAAnC,4JAAmC;IACvC,0DAA+B;IAA/B,wJAA+B;IAC1B,0DAAoC;IAApC,6JAAoC;IACzC,0DAA+B;IAA/B,wJAA+B;IACrB,0DAAyC;IAAzC,mKAAyC;IAWtD,0DAAwB;IAAxB,6IAAwB;IAIrC,0DAAiB;IAAjB,8IAAiB;IACI,0DAAgB;IAAhB,oFAAgB;IAEtB,0DAAoC;IAApC,6FAAoC;IAIpD,0DAAmC;IAAnC,0FAAmC;IAa1C,0DAAsE;IAAtE,qJAAsE;IAe9D,0DAAsB;IAAtB,4EAAsB;IACxB,0DAAsB;IAAtB,oFAAsB;IAG7B,0DAA8B;IAA9B,qFAA8B;IAWrB,0DAA0B;IAA1B,4EAA0B;IAC5B,0DAA0B;IAA1B,wFAA0B;IAG7B,0DAA4B;IAA5B,oFAA4B;IAWvB,0DAA6B;IAA7B,4EAA6B;IAC/B,0DAAqB;IAArB,mFAAqB;IAE0B,0DAAgC;IAAhC,uFAAgC;IAW9D,0DAA0B;IAA1B,gJAA0B;IACzC,0DAA+B;IAA/B,4EAA+B;IAC5B,0DAA2B;IAA3B,0EAA2B;IAChC,0DAA8C;IAA9C,8GAA8C;IAkBtB,0DAAiC;IAAjC,uJAAiC;IACvD,0DAAgC;IAAhC,4EAAgC;IAC7B,0DAA4B;IAA5B,0EAA4B;IACjC,0DAEF;IAFE,qHAEF;IAyBO,0DAAqB;IAArB,qFAAqB;IAE3C,0DAAc;IAAd,+EAAc;IACd,0DAAe;IAAf,gFAAe;IACiC,0DAAuB;IAAvB,6IAAuB;IAC9E,0DACC;IADD,sJACC;IAAwD,0DAAyB;IAAzB,+IAAyB;IAGpF,0DAAsE;IAAtE,qJAAsE;IAIf,0DAAe;IAAf,gFAAe;IAGf,0DAAc;IAAd,+EAAc;IAItE,0DAA6B;IAA7B,6JAA6B;IAA4B,0DAAuB;IAAvB,6IAAuB;;;IAGxF,0EACI;IAAA,oEAA6B;IAC7B,0EACI;IAAA,2EAA2C;IAC/C,4DAAM;IACN,yEAAsC;IAAA,uDAA0B;;IAAA,4DAAK;IACrE,yEACI;IAAA,wEAAgE;IAAA,uDAC5D;;IAAA,wEAAM;IAAA,wDAAgB;IAAA,4DAAO;IAC7B,wDAA6B;;IAAA,4DAAI;IACzC,4DAAK;IACT,4DAAM;;;IANoC,0DAA0B;IAA1B,4IAA0B;IAEzD,0DAAyB;IAAzB,wKAAyB;IAAoC,0DAC5D;IAD4D,wJAC5D;IAAM,0DAAgB;IAAhB,oFAAgB;IACtB,0DAA6B;IAA7B,0JAA6B;;;IA/Q7C,yEAEI;IAAA,qHACI;IAmQJ,mHACI;IAWR,4DAAM;;;IAhRiC,0DAAmB;IAAnB,oFAAmB;IAoQb,0DAAkB;IAAlB,mFAAkB;;ADjPxD,MAAM,eAAe;IAoBxB,YACY,EAAe,EACf,WAAwB,EACxB,MAAqB,EACrB,MAAqB,EACrB,MAAc,EACd,OAAuB,EACvB,SAA2B,EAC3B,WAAuB;QAPvB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAgB;QACvB,cAAS,GAAT,SAAS,CAAkB;QAC3B,gBAAW,GAAX,WAAW,CAAY;QA3BnC,gBAAW,GAAG,EAAE,CAAC;QACjB,oBAAe,GAAG,KAAK,CAAC;QACxB,2BAAsB,GAAG,KAAK,CAAC;QAG/B,cAAS,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAK/C,YAAO,GAAY,IAAI,CAAC;QACxB,oBAAe,GAAY,KAAK,CAAC;QACjC,eAAU,GAAG,KAAK,CAAC;QACnB,YAAO,GAAG,8BAA8B,CAAC;QACzC,WAAM,GAAG,cAAc,CAAC;QAExB,WAAM,GAAG,KAAK,CAAC;QACf,UAAK,GAAG,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAgBrD,iBAAY,GAAG,IAAI,CAAC;QAEpB,aAAQ,GAAG,EAAE,CAAC;QACd,gBAAW,GAAG,EAAE,CAAC;QAKjB,aAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC;QACzC,cAAS,GAAG,EAAE,CAAC;QAwDf,qBAAgB,GAAG,CAAC,OAAoB,EAA4B,EAAE;YAClE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAChB,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;aAC1C;iBAAM,IAAI,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE;gBAClE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;aACzC;YACD,OAAO,EAAE,CAAC;QACd,CAAC,CAAC;QAEF,sBAAiB,GAAG,CAAC,OAAoB,EAA4B,EAAE;YACnE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAChB,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;aAC1C;YACD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,eAAe,CAAC,sBAAsB,EAAE,CAAC;YAClE,OAAO,EAAE,CAAC;QACd,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,OAAoB,EAA4B,EAAE;YAChE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAChB,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;aAC1C;YACD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,sBAAsB,EAAE,CAAC;YACxD,OAAO,EAAE,CAAC;QACd,CAAC,CAAC;QA2GF,sBAAiB,GAAG,IAAI,4CAAO,EAAU,CAAC;QAO1C,eAAU,GAAG,KAAK;QAClB,gBAAW,GAAG,iCAAiC;IAhN3C,CAAC;IAmBC,QAAQ;;YACT,IAAI,CAAC,WAAW,EAAE,CAAC;QACxB,CAAC;KAAA;IAGD,YAAY;QACR,kDAAkD;QAClD,kCAAkC;QAElC,KAAK;QACL,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACnD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC;QAC/B,CAAC,CAAC;IACN,CAAC;IAMD,MAAM,CAAC,GAAG;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE;gBAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;gBACxC,uDAAuD;gBACvD,yDAAyD;gBACzD,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;SACJ;IACL,CAAC;IAED,QAAQ,CAAC,GAAG;QACR,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9C,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE;gBACnC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACxC,2CAA2C;gBAC3C,uDAAuD;gBACvD,yDAAyD;gBACzD,qBAAqB;aACtB;SACN;IACL,CAAC;IAED,UAAU;QACN,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9D,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC;QAClC,CAAC,CAAC;IACN,CAAC;IA2BD,kBAAkB,CAAC,KAAK,EAAE,IAAI;QAC1B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,SAAS,CAC9D,CAAC,IAAI,EAAE,EAAE;YACL,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;gBACjB,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE;oBAEf,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;iBAC/B;qBAAM;oBACH,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;iBAChC;aACJ;QACL,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CACf,CAAC;IACN,CAAC;IACD,MAAM;QACF,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;YACtC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YAC1C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,sBAAsB,EAAE,CAAC;SACxD;QACD,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,IAAI,EAAE,EAAE;YACtD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;SAC3C;aAAM,IACH,IAAI,CAAC,UAAU,CAAC,KAAK;YACrB,IAAI,CAAC,eAAe,IAAI,IAAI,EAE9B;YACE,IAAI,GAAG,GAAG;gBACN,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS;gBAC1C,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;gBACnC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM;gBACpC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;gBACxC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG;gBAC9B,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO;gBACtC,kBAAkB,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,kBAAkB;gBAC5D,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,aAAa,EAAE,IAAI,CAAC,MAAM;gBAC1B,cAAc,EAAE,IAAI,CAAC,OAAO;gBAC5B,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,UAAU,EAAE,IAAI,CAAC,MAAM;gBACvB,QAAQ,EAAC,IAAI,CAAC,QAAQ;gBACtB,oCAAoC;gBACpC,8BAA8B;gBAC9B,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK;aAChD,CAAC;YACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;YAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CACrC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CACnD,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAClC,CAAC,IAAI,EAAE,EAAE;gBACL,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;oBACjB,YAAY,CAAC,KAAK,EAAE,CAAC;oBACrB,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;oBAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBAE1B;YACL,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;gBACJ,oBAAoB;gBACpB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5C,CAAC,CACJ,CAAC;SACL;IAEL,CAAC;IAED,YAAY;QACR,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC3C,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;aACjC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU;QACN,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,+EAAa,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnE,QAAQ,CAAC,eAAe,CAAC,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IACD,mBAAmB;IACnB,4BAA4B;IAC5B,+CAA+C;IAC/C,IAAI;IAEJ,YAAY;QACR,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IACpC,CAAC;IAED,OAAO;QACH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjD,IACI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;gBAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,EACpC;gBACE,IAAI,CAAC,SAAS;oBACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC7D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAChD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;aACvD;SACJ;IACL,CAAC;IAID,MAAM,CAAC,GAAG;QACN,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;IAIH,WAAW;QACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;;YACzC,IAAG,GAAG,CAAC,SAAS,CAAC,EAAC;gBACd,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC/B,IAAG,WAAI,CAAC,WAAW,0CAAE,sBAAsB,KAAI,IAAI,EAAC;oBAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;oBACxC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;iBAC3B;qBACG;oBACA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBAE5B,IAAI,CAAC,WAAW,GAAG,uEAAe,CAAC;oBACnC,IAAI,QAAQ,GAAG,IAAI,wEAAY,EAAE,CAAC;oBAClC,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBAEpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;wBAC5B,SAAS,EAAE;4BACP,IAAI;4BACJ;gCACI,yDAAU,CAAC,QAAQ;gCACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gCACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;gCACxB,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;6BACvC;yBACJ;wBACD,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;wBAClC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;wBACtC,kBAAkB,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;wBACjD,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;wBACtD,QAAQ,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;wBACpD,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;wBAC1C,MAAM,EAAE;4BACJ,IAAI;4BACJ,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;yBAC7D;wBACD,QAAQ,EAAE;4BACN,IAAI;4BACJ;gCACI,yDAAU,CAAC,QAAQ;gCACnB,yDAAU,CAAC,OAAO,CACd,kEAAkE,CACrE;gCACD,IAAI,CAAC,iBAAiB;6BACzB;yBACJ;wBACD,eAAe,EAAE;4BACb,IAAI;4BACJ,CAAC,yDAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC;yBAC/C;wBACD,mBAAmB;wBACnB,YAAY,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC;wBACjC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;qBAC1C,CAAC,CAAC;oBAEH,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,OAAO,EAAE,CAAC;oBACf,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;iBACnC;aACA;YACD,mCAAmC;QAErC,CAAC,CAAC,CAAC;IAET,CAAC;;8EA/SQ,eAAe;+FAAf,eAAe;QCxB5B,2GACI;QAEJ,2GAEI;;QALC,gFAAkB;QAGG,0DAAmB;QAAnB,iFAAmB;;6FDqBhC,eAAe;cAL3B,uDAAS;eAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACzC;;;;;;;;;;;;;;AEvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;AAW3C,MAAM,gBAAgB;IACzB,YACY,KAAqB,EACrB,MAAc,EACd,WAAwB,EACxB,MAAqB,EACrB,MAAqB;QAJrB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAe;IAC9B,CAAC;IAEJ,QAAQ;QACJ,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACtC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC7B,OAAO;aACV;YACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,KAAK;QACP,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,SAAS,CAC/C,CAAC,IAAI,EAAE,EAAE;YACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACJ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC,CACJ,CAAC;IACN,CAAC;;gFA5BQ,gBAAgB;gGAAhB,gBAAgB;QCX7B,yEACI;QAAA,yEACI;QAAA,oEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEACA;QAAA,wEAA6B;QAAA,uDAAgC;;QAAA,4DAAK;QAClE,wEAA2B;QAAA,wDAAoC;;QAAA,4DAAI;QACvE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QALuC,0DAAgC;QAAhC,kJAAgC;QAClC,0DAAoC;QAApC,uJAAoC;;6FDElE,gBAAgB;cAL5B,uDAAS;eAAC;gBACP,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aAC1C;;;;;;;;;;;;;;AERD;AAAA;AAAO,MAAM,YAAY,GAAG,CAAC,OAAoB,EAAE,EAAE;IACjD,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;QAChB,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;KAC1C;SAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACvC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;KACzC;IACD,OAAO,EAAE,CAAC;AACd,CAAC,CAAC","file":"authentication-authentication-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ResetComponent } from './reset/reset.component';\nimport { TwitterComponent } from './twitter/twitter.component';\nimport { EmailComponent } from './email/email.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { OtpComponent } from './otp/otp.component';\nimport { PlansComponent } from './plans/plans.component';\nimport { CardDetailsComponent } from './card-details/card-details.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'login',\n    },\n    {\n        path: 'reset/:id',\n        component: ResetComponent,\n    },\n    {\n        path: 'twitter',\n        component: TwitterComponent,\n    },\n    {\n        path: 'emailVerify/:id',\n        component: EmailComponent,\n    },\n    {\n        path: 'login',\n        component: LoginComponent,\n    },\n    {\n        path: 'signup',\n        component: SignupComponent,\n    },\n    {\n        path: 'forgot',\n        component: ForgotComponent,\n    },\n    {\n        path: 'otp',\n        component: OtpComponent,\n    },\n    {\n        path: 'plans',\n        component: PlansComponent,\n    },\n    {\n        path: 'card-details',\n        component: CardDetailsComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class AuthenticationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ResetComponent } from './reset/reset.component';\nimport { TwitterComponent } from './twitter/twitter.component';\nimport { EmailComponent } from './email/email.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { OtpComponent } from './otp/otp.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\nimport { PlansComponent } from './plans/plans.component';\nimport { CardDetailsComponent } from './card-details/card-details.component';\n\nexport function createTranslateLoader(http: HttpClient) {\n    return new TranslateHttpLoader(http, \"./assets/i18n/\", \".json\");\n}\n\n@NgModule({\n    declarations: [\n        ResetComponent,\n        TwitterComponent,\n        EmailComponent,\n        LoginComponent,\n        SignupComponent,\n        ForgotComponent,\n        OtpComponent,\n        PlansComponent,\n        CardDetailsComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AuthenticationRoutingModule,\n        SharedModule,\n        TranslateModule.forChild({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: createTranslateLoader,\n                deps: [HttpClient],\n            },\n        }),\n    ],\n})\nexport class AuthenticationModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PlanService } from 'src/app/services/plan.service';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { Router } from '@angular/router';\nimport { HelperService } from 'src/app/services/helper.service';\n\n@Component({\n\tselector: 'app-card-details',\n\ttemplateUrl: './card-details.component.html',\n\tstyleUrls: ['./card-details.component.less']\n})\nexport class CardDetailsComponent implements OnInit {\n\n\tvalidateForm!: FormGroup;\n\tminyear = new Date().getFullYear();\n    maxyear = new Date().getFullYear() + 20;\n\tsubmitForm(): void {\n\t\tfor (const i in this.validateForm.controls) {\n\t\t\tthis.validateForm.controls[i].markAsDirty();\n\t\t\tthis.validateForm.controls[i].updateValueAndValidity();\n\t\t}\n\t\tif(this.validateForm.valid){\n\t\t\tlet val = {\n\t\t\t\tid:localStorage.getItem('planid'),\n\t\t\t\t// email:this.validateForm.value.email,\n\t\t\t\tnumber:this.validateForm.value.cardnumber,\n\t\t\t\tmonth:this.validateForm.value.month,\n\t\t\t\tcvc:this.validateForm.value.cvc,\n\t\t\t\tyear:this.validateForm.value.year,\n\t\t\t\tstreet:this.validateForm.value.street,\n\t\t\t\tcity:this.validateForm.value.city,\n\t\t\t\tstate:this.validateForm.value.state,\n\t\t\t\tpincode:this.validateForm.value.pincode,\n\t\t\t\tcountry:this.validateForm.value.country\n\t\t\t}\n\t\t\tthis.planService.subPlan(val).subscribe((res)=>{\n\t\t\t\tif(res['success']){\n\t\t\t\t  this.notify.success(res['message']);\n\t\t\t\t  this.router.navigate(['/home']);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t  this.notify.success(res['message'])\n\t\t\t\t}\n\t\t\t  },\n\t\t\t  (err)=>{\n\t\t\t\tthis.notify.error(err.error['message']);\n\t\t\t  })\n\t\t}\n\t}\n\n\tamount = localStorage.getItem('amount');\n\tplanmonth = localStorage.getItem('month')\n\n\tconstructor(private helper:HelperService,private fb: FormBuilder,private router: Router,private planService:PlanService,private notify:NotifyService) { }\n\n\tngOnInit(): void {\n\t\t\n\t\tthis.validateForm = this.fb.group({\n\t\t\t// agree: [null, [Validators.required]],\n\t\t\tcardnumber: [null, [Validators.required, Validators.maxLength(16)]],\n            month: [null, [Validators.required, Validators.max(12), Validators.min(1)]],\n            cvc: [null, [Validators.required, Validators.minLength(3), Validators.maxLength(4)]],\n            year: [null, [Validators.required, Validators.min(this.minyear), Validators.max(this.maxyear)]],\n            street: [null, [Validators.required]],\n            email: [null, [Validators.required, Validators.email]],\n            city: [null, [Validators.required]],\n            state: [null, [Validators.required]],\n            pincode: [null, [Validators.required]],\n            country: [null, [Validators.required]],\n\t\t});\n\t}\n\n\tlogOut(){\n\t\tthis.helper.LogOut();\n\t}\n}\n","<div class=\"auth-section\">\n    <div class=\"auth-form signup-form\">\n        <!-- <div class=\"auth-logo\"></div> -->\n        <div class=\"d-flex align-items-center justify-content-between mb-4 pb-2\">\n            <div>\n                <img src=\"assets/img/logo.svg\" alt=\"doodem\" draggable=\"false\" width=\"120\" height=\"42\">\n            </div>\n            <div class=\"flex-center font-weight-bold logout-text\">\n                <a (click)=\"logOut()\">{{\"Logout\" | translate}}</a>\n            </div>\n        </div>\n        <h4 class=\"text-center font-weight-bold mb-4 pb-2\">\n            {{\"setupPayment\" | translate}}\n        </h4>\n        <form nz-form [formGroup]=\"validateForm\" class=\"login-form\" (ngSubmit)=\"submitForm()\">\n            <div nz-row [nzGutter]=\"24\" nzAlign=\"top\">\n                <div nz-col nzXs=\"24\" nzSm=\"24\" nzMd=\"12\" nzLg=\"12\" nzXl=\"12\">\n                    <div class=\"addcardform-row\">\n                        <nz-form-item>\n                            <nz-form-label nzFor=\"email\">{{\"Email\" | translate}}</nz-form-label>\n                            <nz-form-control [nzErrorTip]=\"EmailErrorTpl\">\n                                <input nz-input name=\"email\" id=\"email\" type=\"email\" formControlName=\"email\">\n                                <ng-template #EmailErrorTpl let-control>\n                                    <ng-container *ngIf=\"control.hasError('required')\">\n                                        {{\"EnterEmail\" | translate}}\n                                    </ng-container>\n                                </ng-template>\n                            </nz-form-control>\n                        </nz-form-item>\n                    </div>\n                    <div class=\"addcardform-row\">\n                        <nz-form-item>\n                            <nz-form-label nzFor=\"cardnumber\">{{\"CardNo\" | translate}}</nz-form-label>\n                            <nz-form-control [nzErrorTip]=\"CardErrorTpl\">\n                                <input nz-input name=\"cardnumber\" type=\"number\" pattern=\"\\d*\"\n                                    formControlName=\"cardnumber\">\n                                <ng-template #CardErrorTpl let-control>\n                                    <ng-container *ngIf=\"control.hasError('required')\">\n                                        {{\"EnterCardNo\" | translate}}\n                                    </ng-container>\n                                    <ng-container *ngIf=\"control.hasError('maxlength')\">\n                                        {{\"CardPattern\" | translate}}\n                                    </ng-container>\n                                </ng-template>\n                            </nz-form-control>\n                        </nz-form-item>\n                    </div>\n                    <div class=\"addcardform-row\">\n                        <nz-form-item>\n                            <nz-form-label nzFor=\"month\">{{\"ExpiryMonth\" | translate}}</nz-form-label>\n                            <nz-form-control [nzErrorTip]=\"MonthErrorTpl\">\n                                <input nz-input name=\"month\" id=\"month\" type=\"number\" formControlName=\"month\">\n                                <ng-template #MonthErrorTpl let-control>\n                                    <ng-container *ngIf=\"control.hasError('required')\">\n                                        {{\"EnterExpiryMonth\" | translate}}\n                                    </ng-container>\n                                    <ng-container *ngIf=\"control.hasError('max') || control.hasError('min')\">\n                                        {{\"EnterExpiryMonth\" | translate}}\n                                    </ng-container>\n                                </ng-template>\n                            </nz-form-control>\n                        </nz-form-item>\n                        <nz-form-item>\n                            <nz-form-label nzFor=\"year\">{{\"ExpiryYear\" | translate}}</nz-form-label>\n                            <nz-form-control [nzErrorTip]=\"YearErrorTpl\">\n                                <input nz-input name=\"year\" id=\"year\" type=\"number\" formControlName=\"year\">\n                                <ng-template #YearErrorTpl let-control>\n                                    <ng-container *ngIf=\"control.hasError('required') || control.hasError('maxlength')\">\n                                        {{\"EnterExpiryYear\" | translate}}\n                                    </ng-container>\n                                </ng-template>\n                            </nz-form-control>\n                        </nz-form-item>\n                        <nz-form-item>\n                            <nz-form-label nzFor=\"cvc\">{{\"CVV\" | translate}}</nz-form-label>\n                            <nz-form-control [nzErrorTip]=\"CvcErrorTpl\">\n                                <input nz-input name=\"cvc\" id=\"cvc\" type=\"password\" pattern=\"\\d*\" formControlName=\"cvc\">\n                                <ng-template #CvcErrorTpl let-control>\n                                    <ng-container *ngIf=\"control.hasError('required')\">\n                                        {{\"EnterCVV\" | translate}}\n                                    </ng-container>\n                                    <ng-container *ngIf=\"control.hasError('minlength')\">\n                                        {{\"MinCVV\" | translate}}\n                                    </ng-container>\n                                    <ng-container *ngIf=\"control.hasError('maxlength')\">\n                                        {{\"MaxCVV\" | translate}}\n                                    </ng-container>\n                                </ng-template>\n                            </nz-form-control>\n                        </nz-form-item>\n                    </div>\n                </div>\n                <div nz-col nzXs=\"24\" nzSm=\"24\" nzMd=\"12\" nzLg=\"12\" nzXl=\"12\">\n                    <div class=\"addcardform-row\">\n                        <nz-form-item>\n                            <nz-form-label nzFor=\"userName\">{{\"Street\" | translate}}</nz-form-label>\n                            <nz-form-control [nzErrorTip]=\"StreetErrorTpl\">\n                                <input nz-input name=\"street\" id=\"street\" type=\"text\" formControlName=\"street\">\n                                <ng-template #StreetErrorTpl let-control>\n                                    <ng-container *ngIf=\"control.hasError('required')\">\n                                        {{\"EnterStreet\" | translate}}\n                                    </ng-container>\n                                </ng-template>\n                            </nz-form-control>\n                        </nz-form-item>\n                        <nz-form-item>\n                            <nz-form-label nzFor=\"city\">{{\"City\" | translate}}</nz-form-label>\n                            <nz-form-control [nzErrorTip]=\"CityErrorTpl\">\n                                <input nz-input name=\"city\" id=\"city\" type=\"text\" formControlName=\"city\">\n                                <ng-template #CityErrorTpl let-control>\n                                    <ng-container *ngIf=\"control.hasError('required')\">\n                                        {{\"EnterCity\" | translate}}\n                                    </ng-container>\n                                </ng-template>\n                            </nz-form-control>\n                        </nz-form-item>\n                    </div>\n                    <div class=\"addcardform-row\">\n                        <nz-form-item>\n                            <nz-form-label nzFor=\"state\">{{\"State\" | translate}}</nz-form-label>\n                            <nz-form-control [nzErrorTip]=\"StateErrorTpl\">\n                                <input nz-input name=\"state\" id=\"state\" type=\"text\" formControlName=\"state\">\n                                <ng-template #StateErrorTpl let-control>\n                                    <ng-container *ngIf=\"control.hasError('required')\">\n                                        {{\"EnterState\" | translate}}\n                                    </ng-container>\n                                </ng-template>\n                            </nz-form-control>\n                        </nz-form-item>\n                        <nz-form-item>\n                            <nz-form-label nzFor=\"pincode\">{{\"Postal\" | translate}}</nz-form-label>\n                            <nz-form-control [nzErrorTip]=\"ZipcodeErrorTpl\">\n                                <input nz-input name=\"pincode\" id=\"pincode\" type=\"text\" formControlName=\"pincode\">\n                                <ng-template #ZipcodeErrorTpl let-control>\n                                    <ng-container *ngIf=\"control.hasError('required')\">\n                                        {{\"EnterPostal\" | translate}}\n                                    </ng-container>\n                                </ng-template>\n                            </nz-form-control>\n                        </nz-form-item>\n                    </div>\n                    <div class=\"addcardform-row\">\n                        <nz-form-item>\n                            <nz-form-label nzFor=\"country\">{{\"Country\" | translate}}</nz-form-label>\n                            <nz-form-control [nzErrorTip]=\"CountryErrorTpl\">\n                                <input nz-input name=\"country\" id=\"country\" type=\"text\" formControlName=\"country\">\n                                <ng-template #CountryErrorTpl let-control>\n                                    <ng-container *ngIf=\"control.hasError('required')\">\n                                        {{\"EnterCountry\" | translate}}\n                                    </ng-container>\n                                </ng-template>\n                            </nz-form-control>\n                        </nz-form-item>\n                    </div>\n                </div>\n            </div>\n            <div class=\"change-plan-card\">\n                <div>\n                    <span class=\"d-block font-weight-bold\">€ {{amount}}/{{planmonth}} {{\"Month\" | translate}}.</span>\n                    <span class=\"d-block\">{{\"Free\" | translate}}</span>\n                </div>\n                <a [routerLink]=\"['/auth/plans']\">{{\"ChangePlan\" | translate}}</a>\n            </div>\n            <button nz-button [nzType]=\"'primary'\" nzBlock>{{\"StartMembership\" | translate}}</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../services/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\n@Component({\n    selector: 'app-email',\n    templateUrl: './email.component.html',\n    styleUrls: ['./email.component.less'],\n})\nexport class EmailComponent implements OnInit {\n    verifyToken;\n\n    constructor(\n        private authService: AuthService,\n        private message: NzMessageService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {}\n\n    ngOnInit(): void {\n        localStorage.setItem('token', this.route.snapshot.paramMap.get('id'));\n        this.EmailVerify();\n    }\n\n    EmailVerify() {\n        this.authService.VerifyEmail().subscribe((res) => {\n            if (res['success']) {\n                this.message.success(res['message']);\n                localStorage.clear();\n                this.router.navigate(['/auth/login']);\n            } else {\n                this.message.error(res['message']);\n            }\n        });\n    }\n}\n","<div class=\"auth-section\">\n    <div class=\"text-center mt-4\">\n        <img src=\"assets/img/logo.svg\" alt=\"doodem\" width=\"110px\" draggable=\"false\" class=\"logo-image\">\n    </div>\n    <div class=\"auth-card-warpper\">\n        <div class=\"auth-card\">\n            <div class=\"auth-header\">\n                <img src=\"assets/img/auth/email.svg\" alt=\"email\" width=\"80px\" draggable=\"false\" class=\"logo-image\">\n                <h5 class=\"font-weight-bold\">Email Verified Successfully!</h5>\n                <p class=\"text-muted mb-0\">Your email address has been successfully verified successfully.</p>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { Router } from '@angular/router';\nimport { PrintScreens } from 'src/app/helpers/printScreen';\nimport { HomeService } from 'src/app/services/home.service';\n\n@Component({\n    selector: 'app-forgot',\n    templateUrl: './forgot.component.html',\n    styleUrls: ['./forgot.component.less'],\n})\nexport class ForgotComponent implements OnInit {\n    passwordForm: FormGroup;\n\n    constructor(\n        private fb: FormBuilder,\n        private authService: AuthService,\n        private notify: NotifyService,\n        private router: Router,\n        private homeservice:HomeService\n    ) {}\n\n    ngOnInit(): void {\n        let printSrc = new PrintScreens;\n        printSrc.PrintScr();\n        this.getSettings();\n    }\n\n    Forgot() {\n        if(this.passwordForm.value.email == null){\n            this.notify.error('Enter your Email Address');\n        }\n       else if (this.passwordForm.valid) {\n            this.authService.ForgotPassword(this.passwordForm.value).subscribe(\n                (data) => {\n                    this.notify.success(data['message']);\n                    this.router.navigate(['/auth/login']);\n                 },\n                (err) => {\n                    this.notify.error(err.error['message']);\n                }\n            );\n        }\n    }\n\n    ispageLoad = false;\n    settingData;\n    getSettings(){\n        this.ispageLoad = true;\n          this.homeservice.getTerms().subscribe((res)=>{\n              if(res['success']){\n                  this.settingData = res['data'];\n                  if(this.settingData?.user_site_maintainence == true){\n                      this.router.navigate(['/sitemaintain']);\n                      this.ispageLoad = false;\n                  }\n                  else{\n                      this.ispageLoad = false;\n                      this.passwordForm = this.fb.group({\n                        email: [null, [Validators.email, Validators.required]],\n                    });\n              }\n              }\n              // console.log(res['data'],'terms')\n            \n            });\n        \n      }\n      \n}\n","<div *ngIf=\"ispageLoad\" class=\"text-center\">\n    <i nz-icon [nzType]=\"'loading'\" *ngIf=\"ispageLoad\" [nzSpin]=\"true\"></i>\n</div>\n<div class=\"auth-section\" *ngIf=\"!ispageLoad\">\n    <div class=\"auth-form\">\n        <div class=\"auth-logo\"></div>\n        <h5 class=\"text-center mb-1\">{{\"ForgotPasswordTitle\" | translate}}</h5>\n        <p class=\"title-text\">\n            {{\"ForgotPasswordDesc\" | translate}}\n        </p>\n        <form nz-form [formGroup]=\"passwordForm\" (ngSubmit)=\"Forgot()\">\n            <nz-form-item>\n                <nz-form-label nzFor=\"email\">{{\"EmailId\" | translate}}</nz-form-label>\n                <nz-form-control [nzErrorTip]=\"emailErrorTpl\">\n                    <input type=\"email\" name=\"email\" id=\"email\" nz-input formControlName=\"email\" required />\n                    <ng-template #emailErrorTpl let-control>\n                        <ng-container *ngIf=\"control.hasError('email')\">\n                            {{\"EmailPattern\" | translate}}\n                        </ng-container>\n                        <ng-container *ngIf=\"control.hasError('required')\">\n                            {{\"EnterEmail\" | translate}}\n                        </ng-container>\n                    </ng-template>\n                </nz-form-control>\n            </nz-form-item>\n            <button nz-button class=\"auth-form-button auth-form-margin\" [nzType]=\"'primary'\">\n                {{\"ResetLink\" | translate}}\n            </button>\n        </form>\n        <div class=\"text-center mt-2\">\n            <a routerLink=\"/auth/login\">{{\"BackLogin\" | translate}}</a>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { HelperService } from 'src/app/services/helper.service';\nimport { Router } from '@angular/router';\nimport { PrintScreens } from 'src/app/helpers/printScreen';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { validLanguage } from \"src/app/helpers/languages\";\nimport { HomeService } from 'src/app/services/home.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.less'],\n})\nexport class LoginComponent implements OnInit {\n    passwordVisible = false;\n    password?: string;\n    loginForm: FormGroup;\n    isLoading = false;\n    constructor(\n        private translate: TranslateService,\n        private fb: FormBuilder,\n        private authService: AuthService,\n        private notify: NotifyService,\n        private helper: HelperService,\n        private router: Router,\n        private homeservice:HomeService\n    ) {}\n\n    ngOnInit(): void {\n        let printSrc = new PrintScreens;\n        printSrc.PrintScr();\n      this.getSettings();\n    }\n\n    Login() {\n        if(this.loginForm.value.email == null || this.loginForm.value.password == null){\n            this.notify.error('Enter your credentials');\n        }\n       else if (this.loginForm.valid) {\n        this.isLoading = true;\n        let val = {\n            email:this.loginForm.value.email.toLowerCase(),\n            password:this.loginForm.value.password\n        }\n             this.authService.Login(val).subscribe(\n                (data) => {\n                    if (data['g2fa']) {\n                        this.authService.g2fEmail = this.loginForm.value.email;\n                        return this.router.navigate(['/auth/otp']);\n                    }\n                    this.notify.success(data['message']);\n                    this.isLoading = false;\n                    this.helper.Login(data);\n                    localStorage.setItem('locale',data['user']['language'])\n                    this.translate.use(validLanguage(data['user']['language']));\n                     document.documentElement.lang = data['user']['language'];\n                },\n                (err) => {\n                    this.isLoading = false;\n                    this.notify.error(err.error.message);\n                    localStorage.clear();\n                }\n            );\n        }\n    }\n\n    TwitterLogin() {\n        this.authService.TwitterLogin();\n    }\n\n    ispageLoad = false;\n    settingData;\n    getSettings(){\n        this.ispageLoad = true;\n          this.homeservice.getTerms().subscribe((res)=>{\n              if(res['success']){\n                  this.settingData = res['data'];\n                  if(this.settingData?.user_site_maintainence == true){\n                      this.router.navigate(['/sitemaintain']);\n                      this.ispageLoad = false;\n                  }\n                  else{\n                      this.ispageLoad = false;\n                      this.helper.isAlreadyLoggedIn();\n                      this.loginForm = this.fb.group({\n                          email: [null, [Validators.email, Validators.required]],\n                          password: [null, [Validators.required]],\n                          remember: [false],\n                      });\n                  }\n              }\n              // console.log(res['data'],'terms')\n            \n            });\n        \n      }\n      \n}\n","<div *ngIf=\"ispageLoad\" class=\"text-center\">\n    <i nz-icon [nzType]=\"'loading'\" *ngIf=\"ispageLoad\" [nzSpin]=\"true\"></i>\n</div>\n<div class=\"auth-section\" *ngIf=\"!ispageLoad\">\n    <div class=\"auth-form\">\n        <div class=\"auth-logo\"></div>\n        <form nz-form [formGroup]=\"loginForm\" (ngSubmit)=\"Login()\">\n            <nz-form-item>\n                <nz-form-label nzFor=\"email\">{{\"EmailId\" | translate}}</nz-form-label>\n                <nz-form-control nzErrorTip=\"{{'EnterEmail' | translate}}\">\n                    <input type=\"email\" name=\"email\" id=\"email\" nz-input formControlName=\"email\" required />\n                </nz-form-control>\n            </nz-form-item>\n            <nz-form-item>\n                <nz-form-label nzFor=\"password\">{{\"Password\" | translate}}</nz-form-label>\n                <nz-form-control nzErrorTip=\"{{'EnterPassword' | translate}}\">\n                    <nz-input-group [nzSuffix]=\"suffixTemplate\">\n                        <input [type]=\"passwordVisible ? 'text' : 'password'\" name=\"password\" id=\"password\"\n                            formControlName=\"password\" nz-input [(ngModel)]=\"password\" />\n                    </nz-input-group>\n                    <ng-template #suffixTemplate>\n                        <i nz-icon [nzType]=\"passwordVisible ? 'eye' : 'eye-invisible'\"\n                            (click)=\"passwordVisible = !passwordVisible\"></i>\n                    </ng-template>\n                </nz-form-control>\n            </nz-form-item>\n            <nz-form-item class=\"mb-3 d-flex align-items-center justify-content-between\">\n                <label nz-checkbox formControlName=\"remember\">\n                    <span>{{\"Remember\" | translate}}</span>\n                </label>\n                <a routerLink=\"/auth/forgot\" class=\"float-right\">{{\"ForgotPasswordLink\" | translate}}</a>\n            </nz-form-item>\n            <button nz-button class=\"auth-form-button auth-form-margin\" [nzLoading]=\"isLoading\" [nzType]=\"'primary'\">\n                {{\"Login\" | translate}}\n            </button>\n        </form>\n        <div class=\"or-login\">\n            <span>OR</span>\n        </div>\n        <a nz-button nzType=\"default\" (click)=\"TwitterLogin()\" class=\"login-twitter\"><span\n                class=\"twitter-icon\"></span>{{\"LoginTwitter\" | translate}}\n        </a>\n        <div class=\"text-center mt-4\">\n            {{\"HaveAccount\" | translate}} <a routerLink=\"/auth/signup\">{{\"Register\" | translate}}</a>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { OtpValidator } from 'src/app/helpers/customValidators';\nimport { HelperService } from 'src/app/services/helper.service';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { PrintScreens } from 'src/app/helpers/printScreen';\n@Component({\n    selector: 'app-otp',\n    templateUrl: './otp.component.html',\n    styleUrls: ['./otp.component.less'],\n})\nexport class OtpComponent implements OnInit {\n    g2fForm: FormGroup;\n\n    constructor(\n        private fb: FormBuilder,\n        private authService: AuthService,\n        private router: Router,\n        private helper: HelperService,\n        private notify: NotifyService\n    ) {}\n\n    ngOnInit(): void {\n        let printSrc = new PrintScreens;\n        printSrc.PrintScr();\n        if (this.authService.g2fEmail == '')\n            this.router.navigate(['/auth/login']);\n\n        this.g2fForm = this.fb.group({\n            otp: [null, [Validators.required, OtpValidator]],\n        });\n    }\n\n    Login() {\n        if (this.g2fForm.valid) {\n            this.authService\n                .G2FLogin({\n                    email: this.authService.g2fEmail,\n                    otp: this.g2fForm.value.otp,\n                })\n                .subscribe(\n                    (data) => {\n                        this.notify.success(data['message']);\n                        this.helper.Login(data);\n                    },\n                    (err) => {\n                        this.notify.error(err.error['message']);\n                    }\n                );\n        }\n    }\n}\n","<div class=\"auth-section\">\n    <div class=\"auth-form\">\n        <div class=\"auth-logo\"></div>\n        <form nz-form [formGroup]=\"g2fForm\" (ngSubmit)=\"Login()\">\n            <nz-form-item>\n                <nz-form-label nzFor=\"twofactor\"\n                    >{{\"2FactorAuth\" | translate}}</nz-form-label\n                >\n                <nz-form-control [nzErrorTip]=\"otpErrorTpl\">\n                    <input\n                        type=\"number\"\n                        id=\"twofactor\"\n                        nz-input\n                        formControlName=\"otp\"\n                        required\n                    />\n\n                    <ng-template #otpErrorTpl let-control>\n                        <ng-container *ngIf=\"control.hasError('pattern')\">\n                            {{\"ValidOTP\" | translate}}\n                        </ng-container>\n                        <ng-container *ngIf=\"control.hasError('required')\">\n                           {{\"EnterOTP\" | translate}}\n                        </ng-container>\n                    </ng-template>\n                </nz-form-control>\n            </nz-form-item>\n            <button\n                nz-button\n                class=\"auth-form-button auth-form-margin\"\n                [nzType]=\"'primary'\"\n            >\n                {{\"Submit\" | translate}}\n            </button>\n        </form>\n        <div class=\"text-center mt-2\">\n            <a routerLink=\"/auth/login\">{{\"BackLogin\" | translate}}</a>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PlanService } from 'src/app/services/plan.service';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { Router } from '@angular/router';\nimport { HelperService } from 'src/app/services/helper.service';\nimport { HomeService } from 'src/app/services/home.service';\n\n@Component({\n  selector: 'app-plans',\n  templateUrl: './plans.component.html',\n  styleUrls: ['./plans.component.less']\n})\nexport class PlansComponent implements OnInit {\n\n  PlanDetail = [];\n\n  walletBalance = 0;\n  amount = 0;\n  addAmount = 0;\n  depositamount = 0;\n  min = 1;\n  depamount = 0;\n  listOfCard = [];\n  getPaymentDetails: any;\n  cardnotfound = false;\n\n  // Deposit Value\n  depositValue = 'Wallet';\n\n  // Radio -- Select Coin\n  selectCoin = 'btc';\n\n  // Radio -- Select Card\n  selectCard = 'kotak';\n\n  // Modal -- Deposit -- order\n  deposit = 'paytype';\n\n  profile\n\n  planId;\n  // Modal --  Deposit\n  isVisibleDeposit = false;\n  showModalDeposit(amount, offer, obj): void {\n    this.amount = amount - ((amount * offer) / 100);\n    this.planId = obj._id;\n    let amounts:any;\n    amounts = this.amount;\n    localStorage.setItem('planid',this.planId);\n    localStorage.setItem('month',obj.validity);\n    localStorage.setItem('amount',amounts)\n    if (this.amount == 0) {\n      let val = {\n        id:this.planId\n      }\n      this.planService.subPlan(val).subscribe((res)=>{\n        if(res['success']){\n          this.notify.success(res['message']);\n          this.router.navigate(['/home']);\n        }\n        else{\n          this.notify.success(res['message'])\n        }\n      },\n      (err)=>{\n        this.notify.error(err.error['message']);\n      })\n    }\n    else {\n      this.isVisibleDeposit = true;\n    }\n  }\n\n  handleCancelDeposit(): void {\n    this.isVisibleDeposit = false;\n    this.amount = 0;\n  }\n\n  closeDeposit() {\n    this.isVisibleDeposit = false;\n    this.amount = 0;\n  }\n\n  constructor(private helper:HelperService,private profileService: ProfileService, private router: Router,\n    private walletservice: WalletService, private planService: PlanService, private notify: NotifyService,private homeservice:HomeService) { }\n\n  ngOnInit(): void {\n    this.getSettings();\n    \n  }\n\n  getPlan() {\n    this.planService.GetAppplan().subscribe((res) => {\n      if (res['success']) {\n        this.PlanDetail = res['data'];\n        this.PlanDetail.sort(function (a, b) {\n          return a.price - b.price;\n        });\n      }\n    })\n  }\n\n  depositMethod(method): void {\n     if (method == 'card') {\n      this.deposit = method;\n      this.GetCardList();\n    }\n    else {\n      let val = {\n        id: this.planId,\n        wallet: true\n      }\n      this.planService.subPlan(val).subscribe((res)=>{\n        if(res['success']){\n          this.notify.success(res['message']);\n          this.router.navigate(['/home']);\n        }\n        else{\n          this.notify.success(res['message'])\n        }\n      },\n      (err)=>{\n        this.notify.error(err.error['message']);\n      })\n      this.isVisibleDeposit = false;\n    }\n  }\n\n  pay(c_id){\n    let val = {\n      id: this.planId,\n      card_id:c_id\n    }\n    this.planService.subPlan(val).subscribe((res)=>{\n      if(res['success']){\n        this.notify.success(res['message']);\n        this.isVisibleDeposit = false;\n           this.router.navigate(['/home']);\n      }\n      else{\n        this.notify.success(res['message'])\n      }\n    },\n    (err)=>{\n      this.notify.error(err.error['message']);\n    })\n  }\n\n  GetProfile() {\n    this.profileService.GetProfile().subscribe((data) => {\n      if (data && data['success']) {\n        this.profile = data['data'];\n        this.walletBalance = this.profile['balance']\n      }\n    })\n  }\n  GetCardList() {\n    this.walletservice.GetCardList().subscribe((data) => {\n      if (data['success']) {\n        this.listOfCard = data['data'];\n        if (data['data'].length == 0) {\n          this.cardnotfound = true;\n        }\n      }\n    },\n      (err) => {\n        this.notify.error(err.error.message);\n      }\n    );\n  }\n  logOut(){\n\t\tthis.helper.LogOut();\n  }\n  \n  ispageLoad = false;\n    settingData;\n    getSettings(){\n        this.ispageLoad = true;\n          this.homeservice.getTerms().subscribe((res)=>{\n              if(res['success']){\n                  this.settingData = res['data'];\n                  if(this.settingData?.user_site_maintainence == true){\n                      this.router.navigate(['/sitemaintain']);\n                      this.ispageLoad = false;\n                  }\n                  else{\n                      this.ispageLoad = false;\n                      this.GetProfile();\n    this.getPlan();\n                 \n              }\n              }\n              // console.log(res['data'],'terms')\n            \n            });\n        \n      }\n      \n}\n","<div *ngIf=\"ispageLoad\" class=\"text-center\">\n    <i nz-icon [nzType]=\"'loading'\" *ngIf=\"ispageLoad\" [nzSpin]=\"true\"></i>\n</div>\n<div class=\"auth-section\" *ngIf=\"!ispageLoad\">\n    <div class=\"auth-form plan-form\">\n        <div class=\"d-flex align-items-center justify-content-between mb-5\">\n            <div>\n                <img src=\"assets/img/logo.svg\" alt=\"doodem\" draggable=\"false\" width=\"120\" height=\"42\">\n            </div>\n            <div class=\"flex-center font-weight-bold logout-text\">\n                <a (click)=\"logOut()\">{{\"LogOut\" | translate}}</a>\n            </div>\n        </div>\n        <h4 class=\"text-center font-weight-bold mb-3\">{{\"PriceSection\" | translate}}</h4>\n        <h6 class=\"text-center\">\n            {{\"LaunchOffer\" | translate}}\n        </h6>\n        <p>{{\"LaunchOfferDesc\" | translate}}\n        </p>\n        <div class=\"my-4 py-sm-1\">\n            <h4 class=\"text-center font-weight-bold mb-3\">{{\"PremiumFeature\" | translate}}</h4>\n            <div nz-row [nzGutter]=\"24\">\n                <div nz-col nzXs=\"24\" nzSm=\"24\" nzMd=\"24\" nzLg=\"8\" nzXl=\"8\">\n                    <ul class=\"feature-lists\">\n                        <li>\n                            <i-feather name=\"credit-card\"></i-feather>\n                            <span>{{\"unlimitedEarning\" | translate}}</span>\n                        </li>\n                        <li>\n                            <i-feather name=\"share-2\"></i-feather>\n                            <span>{{\"Privatecontent\" | translate}}</span>\n                        </li>\n                    </ul>\n                </div>\n                <div nz-col nzXs=\"24\" nzSm=\"24\" nzMd=\"24\" nzLg=\"8\" nzXl=\"8\">\n                    <ul class=\"feature-lists\">\n                        <li>\n                            <i-feather name=\"layout\"></i-feather>\n                            <span>{{\"FlexiblePayouts\" | translate}}</span>\n                        </li>\n                        <li>\n                            <i-feather name=\"message-square\"></i-feather>\n                            <span>{{\"PvtMessage\" | translate}}</span>\n                        </li>\n                    </ul>\n                </div>\n                <div nz-col nzXs=\"24\" nzSm=\"24\" nzMd=\"24\" nzLg=\"8\" nzXl=\"8\">\n                    <ul class=\"feature-lists\">\n                        <li>\n                            <i-feather name=\"video\"></i-feather>\n                            <span>{{\"OneOnChatting\" | translate}}</span>\n                        </li>\n                        <li>\n                            <i-feather name=\"file-text\"></i-feather>\n                            <span>{{\"Tiptocontent\" | translate}}</span>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class=\"mt-4\">\n            <!-- <h4 class=\"text-center font-weight-bold\">The Cheap And Best Pricing Around!</h4> -->\n            <h6 class=\"text-center font-weight-bold\">{{\"ChoosePlan\" | translate}}\n            </h6>\n        </div>\n        <div nz-row [nzGutter]=\"24\" class=\"align-items-center justify-content-center\">\n            <div nz-col nzXs=\"24\" nzSm=\"24\" nzMd=\"24\" nzLg=\"8\" nzXl=\"8\" *ngFor=\"let plan of PlanDetail\">\n                <div class=\"pricing-card\">\n                    <div class=\"price-icon\">\n                        <img src=\"../../../../assets/img/app/svg/shape-1.svg\" alt=\"price\" draggable=\"false\">\n                    </div>\n                    <div class=\"price-time-period\">\n                        {{plan.title | uppercase}}\n                    </div>\n                    <div class=\"price-value\">\n                        <s class=\"text-light-50\" *ngIf=\"plan.offer > 0\">€{{plan.price}}</s>\n                        €{{plan.price - (plan.price * plan.offer)/100}}\n                    </div>\n                    <div class=\"plan-validity\">\n                        € {{plan.price - (plan.price * plan.offer)/100}}/{{plan.validity}} Month\n                    </div>\n                    <div class=\"plan-action\">\n                        <a (click)=\"showModalDeposit(plan.price,plan.offer,plan)\" nz-button nzSize=\"default\"\n                            nzType=\"primary\">{{\"GetStarted\" | translate}}</a>\n                    </div>\n                </div>\n            </div>\n\n            <div nz-col nzSpan=\"24\">\n                <p class=\"small\">{{\"Note\" | translate}}: {{\"NoteDesc\" | translate}}</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Modal -- Deposit -->\n<nz-modal nzWrapClassName=\"vertical-center-modal premium-modal\" [(nzVisible)]=\"isVisibleDeposit\" [nzFooter]=\"null\"\n    nzClosable=\"false\">\n    <div *ngIf=\"deposit === 'paytype'\">\n        <div class=\"premium-modal-header\">\n            <img src=\"../../../../../assets/img/app/icon/pay-wallet.svg\" alt=\"wallet\" draggable=\"false\">\n        </div>\n        <div class=\"premium-modal-body\">\n            <!-- <h5 class=\"text-primary text-center mb-3\">{{\"AddtoWallet\" | translate}} €{{addAmount}}</h5> -->\n            <div class=\"or-login my-3\">\n                <span class=\"h6 mb-0 text-black\">{{\"PaymentMethod\" | translate}}</span>\n            </div>\n            <div class=\"deposit-category--select\">\n                <nz-radio-group [(ngModel)]=\"depositValue\">\n                    <label nz-radio nzValue=\"Wallet\" *ngIf=\"walletBalance != 0 && walletBalance >= amount\">\n                        <span class=\"radio-text\">{{\"Wallet\" | translate}}</span>\n                    </label>\n                    <label nz-radio nzValue=\"card\">\n                        <span class=\"radio-text\">{{\"Card\" |translate}}</span></label>\n                </nz-radio-group>\n            </div>\n            <div class=\"mt-2 flex-footer-btn\">\n                <button nz-button nzType=\"default\" [nzSize]=\"'large'\"\n                    (click)=\"handleCancelDeposit()\">{{\"Cancel\" | translate}}</button>\n                <button nz-button nzType=\"primary\" [nzSize]=\"'large'\"\n                    (click)=\"depositMethod(depositValue)\">{{\"Continue\" | translate}}</button>\n            </div>\n        </div>\n    </div>\n    <!-- Card Select -- Start -->\n    <div *ngIf=\"deposit === 'card'\">\n        <div class=\"custom-modal-header\">\n            <div class=\"close-btn-wrapper close-btn-left\">\n                <button nz-button class=\"modal-close-btn\" (click)=\"deposit='paytype'\">\n                    <i-feather name=\"arrow-left\"></i-feather>\n                </button>\n            </div>\n            <div class=\"text-center\">\n                <div class=\"custom-modal-title\">{{\"CardPayment\" | translate}}</div>\n            </div>\n        </div>\n        <div class=\"custom-modal-body pt-0\">\n            <div class=\"custom-input-group\" *ngIf=\"cardnotfound == true\">\n                <ng-container *ngIf=\"cardnotfound == true\">\n                    <p class=\"text-center text-md mb-0 pt-4 px-4\" *ngIf=\"listOfCard.length == 0\">\n                        <a routerLink=\"/auth/card-details\">{{\"AddCard\" | translate}}</a>\n                    </p>\n                </ng-container>\n            </div>\n            <div class=\"deposit-category--select\">\n                <nz-radio-group [(ngModel)]=\"selectCard\">\n                    <label nz-radio nzValue=\"{{card._id}}\" *ngFor=\"\n                    let card of listOfCard;\n                    let i = index\n                    \">\n                        <div class=\"card-item\">\n                            <div class=\"card-item-img\">\n                                <img src=\"../../../../../assets/img/app/icon/mastercard.svg\" alt=\"mastercard\"\n                                    draggable=\"false\">\n                            </div>\n                            <div>\n                                <div>\n                                    <!-- <span>MASTERCARD</span> -->\n                                    <span class=\"ml-2\"> *********** {{card.number}}</span>\n                                </div>\n                                <div class=\"radio-text\">{{card.brand}}</div>\n                                <div>€{{depositamount}}</div>\n                            </div>\n                        </div>\n                    </label>\n                </nz-radio-group>\n                <a routerLink=\"/auth/card-details\" *ngIf=\"listOfCard.length > 0\">{{\"chooseAnother\" | translate}}</a>\n            </div>\n            <div class=\"mt-2 flex-footer-btn\">\n                <button nz-button nzType=\"default\" [nzSize]=\"'large'\" (click)=\"handleCancelDeposit()\"\n                    *ngIf=\"cardnotfound != true\">{{\"Cancel\" | translate}}</button>\n                <button nz-button nzType=\"primary\" [nzSize]=\"'large'\" *ngIf=\"cardnotfound != true\"\n                    (click)=\"pay(selectCard)\">{{\"Done\" | translate}}</button>\n            </div>\n        </div>\n    </div>\n    <!-- Card Select -- End -->\n</nz-modal>","import { Component, OnInit } from '@angular/core';\nimport {\n    FormBuilder,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\nimport { AuthService } from '../../../services/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { PrintScreens } from 'src/app/helpers/printScreen';\nimport { HomeService } from 'src/app/services/home.service';\n\n@Component({\n    selector: 'app-reset',\n    templateUrl: './reset.component.html',\n    styleUrls: ['./reset.component.less'],\n})\nexport class ResetComponent implements OnInit {\n    // Form\n    passwordForm: FormGroup;\n\n    constructor(\n        private fb: FormBuilder,\n        private auth: AuthService,\n        private notify: NotifyService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private homeservice:HomeService\n    ) {\n        localStorage.setItem(\n            'token',\n            this.route.snapshot.paramMap.get('id')\n        );\n    }\n\n    ngOnInit(): void {\n         let printSrc = new PrintScreens;\n        printSrc.PrintScr();\n        this.getSettings();\n      \n    }\n\n    confirmValidator = (control: FormControl): { [s: string]: boolean } => {\n        if (!control.value) {\n            return { error: true, required: true };\n        } else if (\n            control.value !== this.passwordForm.controls.password.value\n        ) {\n            return { confirm: true, error: true };\n        }\n        return {};\n    };\n\n    passwordValidator = (control: FormControl): { [s: string]: boolean } => {\n        if (!control.value) {\n            return { error: true, required: true };\n        }\n        this.passwordForm.controls.confirmPassword.updateValueAndValidity();\n        return {};\n    };\n\n    Reset() {\n        if(this.passwordForm.invalid){\n            this.notify.error('Enter all values')\n        }\n         if (this.passwordForm.valid) {\n            const { password, confirmPassword } = this.passwordForm.value;\n            if (confirmPassword === password) {\n                this.auth\n                    .ResetPassword({\n                        password,\n                    })\n                    .subscribe(\n                        (res) => {\n                            if (res['success']) {\n                                localStorage.clear();\n                                this.notify.success(res['message']);\n                                this.router.navigate(['/auth/login']);\n                            } else {\n                                this.notify.error(res['message']);\n                            }\n                        },\n                        (err) => {\n                            this.notify.error(err.error['message']);\n                        }\n                    );\n            }\n        }\n    }\n    ispageLoad = false;\n    settingData;\n    getSettings(){\n        this.ispageLoad = true;\n          this.homeservice.getTerms().subscribe((res)=>{\n              if(res['success']){\n                  this.settingData = res['data'];\n                  if(this.settingData?.user_site_maintainence == true){\n                      this.router.navigate(['/sitemaintain']);\n                      this.ispageLoad = false;\n                  }\n                  else{\n                      this.ispageLoad = false;\n                      this.passwordForm = this.fb.group({\n                        password: [\n                            null,\n                            [\n                                Validators.required,\n                                Validators.pattern(\n                                    /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*\\/])(?=.{8,})/\n                                ),\n                                this.passwordValidator,\n                            ],\n                        ],\n                        confirmPassword: [\n                            null,\n                            [Validators.required, this.confirmValidator],\n                        ],\n                    });\n                 \n              }\n              }\n              // console.log(res['data'],'terms')\n            \n            });\n        \n      }\n      \n}\n","<div *ngIf=\"ispageLoad\" class=\"text-center\">\n    <i nz-icon [nzType]=\"'loading'\" *ngIf=\"ispageLoad\" [nzSpin]=\"true\"></i>\n</div>\n<div class=\"auth-section\" *ngIf=\"!ispageLoad\">\n    <div class=\"auth-card-warpper\">\n        <div class=\"auth-card\">\n            <div class=\"auth-header\">\n                <img src=\"assets/img/logo.svg\" alt=\"doodem\" height=\"42\" width=\"120\" draggable=\"false\"\n                    class=\"logo-image\" />\n                <h5 class=\"font-weight-bold\">{{\"ResetPassword\" | translate}}</h5>\n            </div>\n        </div>\n        <form nz-form [formGroup]=\"passwordForm\" (ngSubmit)=\"Reset()\">\n            <nz-form-item>\n                <nz-form-label nzSpan=\"24\" nzFor=\"newPassword\">{{\"Password\" | translate}}</nz-form-label>\n                <nz-form-control [nzErrorTip]=\"combineTpl\">\n                    <input nz-input type=\"password\" id=\"newPassword\" formControlName=\"password\" placeholder=\"******\" />\n                    <ng-template #combineTpl let-control>\n                        <ng-container *ngIf=\"control.hasError('pattern')\">\n                            {{\"PasswordPattern\" | translate}}</ng-container>\n                        <ng-container *ngIf=\"control.hasError('required')\"> {{\"EnterPassword\" | translate}}\n                        </ng-container>\n                    </ng-template>\n                </nz-form-control>\n            </nz-form-item>\n            <nz-form-item>\n                <nz-form-label nzSpan=\"24\" nzFor=\"confirmNewPassword\">{{\"ConfirmPassword\" | translate}}</nz-form-label>\n                <nz-form-control [nzErrorTip]=\"errorTpl\">\n                    <input nz-input type=\"password\" placeholder=\"******\" formControlName=\"confirmPassword\"\n                        id=\"confirmNewPassword\" />\n                    <ng-template #errorTpl let-control>\n                        <ng-container *ngIf=\"control.hasError('required')\">\n                            {{\"EnterConfirmPassword\" | translate}}\n                        </ng-container>\n                        <ng-container *ngIf=\"control.hasError('confirm')\">\n                            {{\"ConfirmPassowrdMatch\" | translate}}\n                        </ng-container>\n                    </ng-template>\n                </nz-form-control>\n            </nz-form-item>\n            <nz-form-item>\n                <nz-form-control>\n                    <button nz-button class=\"login-form-button w-100 mt-2\" nzSize=\"large\" [nzType]=\"'primary'\">\n                        {{\"RePassword\" | translate}}\n                    </button>\n                </nz-form-control>\n            </nz-form-item>\n        </form>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n    FormBuilder,\n    FormGroup,\n    Validators,\n    FormControl,\n} from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { Router } from '@angular/router';\nimport { HelperService } from 'src/app/services/helper.service';\nimport { PrintScreens } from 'src/app/helpers/printScreen';\nimport { CountryDropdown } from 'src/app/helpers/country';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { Subject, Subscription } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { validLanguage } from 'src/app/helpers/languages';\nimport { HomeService } from 'src/app/services/home.service';\n\n@Component({\n    selector: 'app-signup',\n    templateUrl: './signup.component.html',\n    styleUrls: ['./signup.component.less'],\n})\nexport class SignupComponent implements OnInit {\n    countryCode = [];\n    passwordVisible = false;\n    confirmpasswordVisible = false;\n    Sex: string;\n    Sexual_Orientation: string;\n    useremail = localStorage.getItem('user_email');\n    password?: string;\n    Email_Address;\n    confirmpassword?: string;\n    signUpForm!: FormGroup;\n    aggreed: Boolean = true;\n    user_name_error: Boolean = false;\n    isVisisble = false;\n    flagurl = 'https://www.countryflags.io/';\n    endurl = '/flat/64.png';\n    selectedValue;\n    isShow = false;\n    agree = new FormControl(null, [Validators.required]);\n\n    constructor(\n        private fb: FormBuilder,\n        private authService: AuthService,\n        private notify: NotifyService,\n        private helper: HelperService,\n        private router: Router,\n        private profile: ProfileService,\n        private translate: TranslateService,\n        private homeservice:HomeService\n    ) { }\n\n    emailaddress: any;\n    domain: any;\n    country_code;\n    country_name = 'IN';\n    imageFlag;\n    category = [];\n    subcategory = [];\n    categoryName;\n    category_name;\n    SubcategoryName;\n    sub_cat;\n    language = localStorage.getItem('locale')\n    languages = [];\n    //sign up\n    username;\n    settingData;\n\n    async ngOnInit(){\n         this.getSettings();\n    }\n\n\n    categoryList() {\n        // this.profile.GetCategory().subscribe((res) => {\n        //     this.category = res['data']\n\n        // })\n        this.lang = localStorage.getItem('locale');\n        this.profile.CategoryList(this.lang).subscribe((res) => {\n            this.category = res['data']\n        })\n    }\n\n    Cat_id;\n    lang;\n    Sub_id;\n    \n    subcat(ind) {\n        this.sub_cat = null;\n        for (let i = 0; i < this.category.length; i++) {\n            if (this.category[i]['_id'] == ind) {\n                this.Cat_id = this.category[i]['id'];\n                this.isShow = this.category[i]['adult'];\n                // this.subcategory = this.category[i]['sub_category'];\n                // this.category_name = this.category[i]['categoryname'];\n                this.subcatlist();\n            }\n        }\n    }\n\n    getSubid(ind) {\n        for (let i = 0; i < this.subcategory.length; i++) {\n            if (this.subcategory[i]['_id'] == ind) {\n                this.Sub_id = this.subcategory[i]['id'];\n                // this.isShow = this.category[i]['adult'];\n                // this.subcategory = this.category[i]['sub_category'];\n                // this.category_name = this.category[i]['categoryname'];\n                // this.subcatlist();\n              }\n        }\n    }\n\n    subcatlist() {\n        this.profile.SubCatList(this.Cat_id, this.lang).subscribe((res) => {\n            this.subcategory = res['data']\n        })\n    }\n\n    confirmValidator = (control: FormControl): { [s: string]: boolean } => {\n        if (!control.value) {\n            return { error: true, required: true };\n        } else if (control.value !== this.signUpForm.controls.password.value) {\n            return { confirm: true, error: true };\n        }\n        return {};\n    };\n\n    passwordValidator = (control: FormControl): { [s: string]: boolean } => {\n        if (!control.value) {\n            return { error: true, required: true };\n        }\n        this.signUpForm.controls.confirmPassword.updateValueAndValidity();\n        return {};\n    };\n\n    agreeValidator = (control: FormControl): { [s: string]: boolean } => {\n        if (!control.value) {\n            return { error: true, required: true };\n        }\n        this.signUpForm.controls.agree.updateValueAndValidity();\n        return {};\n    };\n\n    checkDuplicateData(value, type) {\n        this.authService.Duplicate({ value: value, type: type }).subscribe(\n            (data) => {\n                if (data['success']) {\n                    if (data['found']) {\n\n                        this.user_name_error = true;\n                    } else {\n                        this.user_name_error = false;\n                    }\n                }\n            },\n            (err) => { }\n        );\n    }\n    SignUp() {\n        for (const i in this.signUpForm.controls) {\n            this.signUpForm.controls[i].markAsDirty();\n            this.signUpForm.controls[i].updateValueAndValidity();\n        }\n        if (this.country_code == null || this.country_code == '') {\n            this.notify.error('Enter country code');\n        } else if (\n            this.signUpForm.valid &&\n            this.user_name_error != true\n\n        ) {\n            let val = {\n                user_name: this.signUpForm.value.user_name,\n                email: this.useremail.toLowerCase(),\n                mobile: this.signUpForm.value.mobile,\n                password: this.signUpForm.value.password,\n                Sex: this.signUpForm.value.Sex,\n                country: this.signUpForm.value.country,\n                Sexual_Orientation: this.signUpForm.value.Sexual_Orientation,\n                country_code: this.country_code,\n                Country_name: this.country_name,\n                subcategoryid: this.Sub_id,\n                subcategory_id: this.sub_cat,\n                category_id: this.categoryName,\n                categoryid: this.Cat_id,\n                language:this.language,\n                // categoryname: this.category_name,\n                // sub_category: this.sub_cat,\n                adult: this.isShow ? this.agree.value : false\n            };\n            this.emailaddress = this.signUpForm.value.email;\n            this.domain = this.emailaddress.substring(\n                this.signUpForm.value.email.lastIndexOf('@') + 1\n            );\n            this.authService.SignUp(val).subscribe(\n                (data) => {\n                    if (data['success']) {\n                        localStorage.clear();\n                        window.sessionStorage.clear();\n                        this.notify.success(data['message']);\n                        this.isVisisble = true;\n\n                    }\n                },\n                (err) => {\n                    // console.log(err);\n                    this.notify.error(err.error['message']);\n                }\n            );\n        }\n\n    }\n    \n    GetLanguages() {\n        this.profile.ListLanguage().subscribe((data) => {\n            if (data['success']) {\n                this.languages = data['data'];\n            }\n        });\n    }\n\n    changeLang(){\n        localStorage.setItem('locale',this.language);\n         this.translate.use(validLanguage(localStorage.getItem('locale')));\n        document.documentElement.lang = localStorage.getItem('locale');\n        this.categoryList();\n    }\n    // Clearsession() {\n    //     this.helper.LogOut();\n    //     this.router.navigate(['/product/list']);\n    // }\n\n    TwitterLogin() {\n        this.authService.TwitterLogin();\n    }\n\n    country() {\n        for (let i = 0; i < this.countryCode[0].length; i++) {\n            if (\n                this.countryCode[0][i].code ==\n                this.signUpForm.value.country_name\n            ) {\n                this.imageFlag =\n                    this.flagurl + this.countryCode[0][i].code + this.endurl;\n                this.country_name = this.countryCode[0][i].code;\n                this.country_code = this.countryCode[0][i].dial_code\n            }\n        }\n    }\n    searchTextChanged = new Subject<string>();\n\n\n    Search(val) {\n        this.searchTextChanged.next(val);\n    }\n\n    ispageLoad = false\n    userPattern = '^(?!^\\\\d+$)[A-Za-z0-9_-]{3,16}$'\n  getSettings(){\n      this.ispageLoad = true;\n        this.homeservice.getTerms().subscribe((res)=>{\n            if(res['success']){\n                this.settingData = res['data'];\n                if(this.settingData?.user_site_maintainence == true){\n                    this.router.navigate(['/sitemaintain']);\n                    this.ispageLoad = false;\n                }\n                else{\n                    this.ispageLoad = false;\n      \n                this.countryCode = CountryDropdown;\n                let printSrc = new PrintScreens();\n                printSrc.PrintScr();\n        \n                this.signUpForm = this.fb.group({\n                    user_name: [\n                        null,\n                        [\n                            Validators.required,\n                            Validators.minLength(3),\n                            Validators.maxLength(20),\n                            Validators.pattern(this.userPattern)\n                        ],\n                    ],\n                    Sex: [null, [Validators.required]],\n                    country: [null, [Validators.required]],\n                    Sexual_Orientation: [null, [Validators.required]],\n                    email: [null, [Validators.email, Validators.required]],\n                    category: [this.categoryName, [Validators.required]],\n                    Subcategory: [null, [Validators.required]],\n                    mobile: [\n                        null,\n                        [Validators.required, Validators.pattern('([0-9]{7,15})')],\n                    ],\n                    password: [\n                        null,\n                        [\n                            Validators.required,\n                            Validators.pattern(\n                                /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*\\/])(?=.{8,})/\n                            ),\n                            this.passwordValidator,\n                        ],\n                    ],\n                    confirmPassword: [\n                        null,\n                        [Validators.required, this.confirmValidator],\n                    ],\n                    //  agree: [false],\n                    country_name: [this.country_name],\n                    language: [null, [Validators.required]]\n                });\n        \n                this.GetLanguages();\n                this.country();\n                this.categoryList();\n                this.Search(this.selectedValue);\n            }\n            }\n            // console.log(res['data'],'terms')\n          \n          });\n      \n    }\n    \n}\n","<div *ngIf=\"ispageLoad\" class=\"text-center\">\n    <i nz-icon [nzType]=\"'loading'\" *ngIf=\"ispageLoad\" [nzSpin]=\"true\"></i>\n</div>\n<div class=\"auth-section\" *ngIf=\"!ispageLoad\">\n   \n    <div class=\"auth-form signup-form\" *ngIf=\"!isVisisble\">\n        <div class=\"auth-logo\"></div>\n        <h6 class=\"text-center mb-3\">\n            {{\"SignUpDesc\" | translate}}\n        </h6>\n        <form nz-form [formGroup]=\"signUpForm\">\n            <div nz-row [nzGutter]=\"24\" nzAlign=\"top\">\n                <div nz-col nzXs=\"24\" nzSm=\"24\" nzMd=\"12\" nzLg=\"12\" nzXl=\"12\">\n                    <nz-form-item>\n                        <nz-form-label nzFor=\"username\">{{\"Username\" | translate}}</nz-form-label>\n                        <nz-form-control [nzErrorTip]=\"nameErrorTpl\">\n                            <input type=\"text\" name=\"username\" id=\"username\"\n                                (focusout)=\"checkDuplicateData($event.target.value,'user_name')\" nz-input\n                                formControlName=\"user_name\" />\n                            <ng-container *ngIf=\"user_name_error == true\">\n                                <p style=\"color: red\">{{\"UsernameNotAvailable\" | translate}}</p>\n                            </ng-container>\n                            <ng-template #nameErrorTpl let-control>\n                                <ng-container *ngIf=\"\n                                        control.hasError('minlength') ||\n                                        control.hasError('maxlength')\n                                    \">\n                                    {{\"UsernamePattern\" | translate}}\n                                </ng-container>\n                                <ng-container *ngIf=\"control.hasError('pattern')\">\n                                    {{\"UsernamePattern\" | translate}}\n                                </ng-container>\n                                <ng-container *ngIf=\"control.hasError('required')\">\n                                    {{\"EnterUsername\" | translate}}\n                                </ng-container>\n                            </ng-template>\n                        </nz-form-control>\n                    </nz-form-item>\n                    <nz-form-item>\n                        <nz-form-label nzFor=\"email\">{{\"EmailId\" | translate}}</nz-form-label>\n                        <nz-form-control [nzErrorTip]=\"emailErrorTpl\">\n                            <input type=\"email\" name=\"email\" id=\"email\" nz-input formControlName=\"email\"\n                                [(ngModel)]=\"useremail\" />\n                            <ng-template #emailErrorTpl let-control>\n                                <ng-container *ngIf=\"control.hasError('email')\">\n                                    {{\"EmailPattern\" | translate}}\n                                </ng-container>\n                                <ng-container *ngIf=\"control.hasError('required')\">\n                                    {{\"EnterEmail\" | translate}}\n                                </ng-container>\n                            </ng-template>\n                        </nz-form-control>\n                    </nz-form-item>\n                    <nz-form-item>\n                        <nz-form-label nzFor=\"about\">{{\"Gender\" | translate}}</nz-form-label>\n                        <nz-form-control [nzErrorTip]=\"GenderErr\">\n                            <nz-select [(ngModel)]=\"Sex\" formControlName=\"Sex\" nzPlaceHolder=\"Choose\">\n                                <nz-option nzValue=\"Man\" nzLabel=\"{{'Male' | translate}}\"></nz-option>\n                                <nz-option nzValue=\"Woman\" nzLabel=\"{{'Female' | translate}}\"></nz-option>\n                                <!-- <nz-option nzValue=\"Hetro\" nzLabel=\"{{'HeteroSexual' | translate}}\"></nz-option> -->\n                                <nz-option nzValue=\"Trans\" nzLabel=\"{{'Trans' | translate}}\"></nz-option>\n                                <nz-option nzValue=\"Non-Specified\" nzLabel=\"{{'Non-Specified' | translate}}\">\n                                </nz-option>\n                            </nz-select>\n                        </nz-form-control>\n                        <ng-template #GenderErr let-control>\n                            <ng-container *ngIf=\"control.hasError('required')\">\n                                {{\"EnterGender\" | translate}}\n                            </ng-container>\n                        </ng-template>\n                    </nz-form-item>\n                    <nz-form-item>\n                        <nz-form-label nzFor=\"username\">{{\"Country\" | translate}}</nz-form-label>\n                        <nz-form-control [nzErrorTip]=\"countyErr\">\n                            <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Country\" [(ngModel)]=\"selectedValue\"\n                                [nzShowArrow]=\"false\" formControlName=\"country\" id=\"county\">\n                                <nz-option *ngFor=\"let countr of countryCode[0]\" [nzLabel]=\"countr.name\"\n                                    [nzValue]=\"countr.name\"> </nz-option>\n                            </nz-select>\n                            <ng-template #countyErr let-control>\n                                <ng-container *ngIf=\"control.hasError('required')\">\n                                    {{\"EnterCountry\" | translate}}\n                                </ng-container>\n                            </ng-template>\n                        </nz-form-control>\n                    </nz-form-item>\n                    <nz-form-item>\n                        <nz-form-label nzFor=\"about\">{{\"Sexualorientation\" | translate}}</nz-form-label>\n                        <nz-form-control [nzErrorTip]=\"orientationErr\">\n                            <nz-select [(ngModel)]=\"Sexual_Orientation\" formControlName=\"Sexual_Orientation\"\n                                nzPlaceHolder=\"Choose\">\n                                <!-- <nz-option nzValue=\"Trans\" nzLabel=\"{{'Trans' | translate}}\"></nz-option> -->\n                                <nz-option nzValue=\"Heterosexual\" nzLabel=\"{{'HeteroSexual' | translate}}\"></nz-option>\n                                <nz-option nzValue=\"Lesbian\" nzLabel=\"{{'Lesbian' | translate}}\"></nz-option>\n                                <nz-option nzValue=\"Gay\" nzLabel=\"{{'Gay' | translate}}\"></nz-option>\n                                <nz-option nzValue=\"Bisexual\" nzLabel=\"{{'Bisexual' | translate}}\"></nz-option>\n                                <nz-option nzValue=\"All\" nzLabel=\"{{'All' | translate}}\"></nz-option>\n                                <nz-option nzValue=\"Non-Specified\" nzLabel=\"{{'Non-Specified' | translate}}\">\n                                </nz-option>\n                            </nz-select>\n                        </nz-form-control>\n                        <ng-template #orientationErr let-control>\n                            <ng-container *ngIf=\"control.hasError('required')\">\n                                {{\"EnterOrientation\" | translate}}\n                            </ng-container>\n                        </ng-template>\n                    </nz-form-item>\n                    <nz-form-item class=\"custom-mob-select\">\n                        <nz-form-label nzFor=\"mobile\">{{\"Mobile\" | translate}}</nz-form-label>\n                        <nz-form-control>\n                            <nz-input-group nzCompact class=\"d-flex mobile-input\">\n                                <div class=\"country-code\">\n                                    <img [src]=\"imageFlag\" style=\"width: 20px; height: 20px;\">\n                                    <div class=\"country-name\">{{country_name}}</div>\n                                </div>\n                                <nz-select nzShowSearch [nzDropdownMatchSelectWidth]=\"false\"\n                                    formControlName=\"country_name\" [(ngModel)]=\"country_name\"\n                                    (ngModelChange)=\"country()\">\n                                    <nz-option nzCustomContent [nzLabel]=\"data.dial_code\" [nzValue]=\"data.code\"\n                                        *ngFor=\"let data of countryCode[0]\">\n                                        <div class=\"d-flex align-items-center justify-content-between text-truncate\">\n                                            <div class=\"d-flex word-space\">\n                                                <img [src]=\"flagurl+data.code+endurl\"\n                                                    style=\"width: 20px; height: 20px;\">\n                                            </div>\n                                            <div class=\"ml-1\">{{data.dial_code}}</div>\n                                        </div>\n                                    </nz-option>\n                                </nz-select>\n                                <input class=\"pl-0 bl-0\" type=\"number\" name=\"mobile\" id=\"mobile\" nz-input\n                                    formControlName=\"mobile\" />\n                            </nz-input-group>\n                            <div *ngIf=\"signUpForm.invalid && (signUpForm.dirty || signUpForm.touched)\">\n                                <div style=\"color:red\" *ngIf=\"signUpForm.get('mobile').hasError('required')\">\n                                    {{\"EnterMobile\" | translate}}\n                                </div>\n                                <div style=\"color:red\" *ngIf=\"signUpForm.get('mobile').hasError('pattern')\">\n                                    {{\"MobilePattern\" | translate}}\n                                </div>\n                            </div>\n                        </nz-form-control>\n                    </nz-form-item>\n                </div>\n                <div nz-col nzXs=\"24\" nzSm=\"24\" nzMd=\"12\" nzLg=\"12\" nzXl=\"12\">\n                  \n                    <nz-form-item>\n                        <nz-form-label nzFor=\"language\">Language</nz-form-label>\n                        <nz-form-control [nzErrorTip]=\"langErr\">\n                            <nz-select [(ngModel)]=\"language\" (ngModelChange)=\"changeLang()\" formControlName=\"language\" nzPlaceHolder=\"Choose\"\n                                 [nzDropdownClassName]=\"'interested-item'\">\n                                <nz-option [nzValue]=\"lang.symbol\" [nzLabel]=\"lang.language\"\n                                *ngFor=\"let lang of languages\" class=\"text-capitalize\"></nz-option>\n                            </nz-select>\n                        </nz-form-control>\n                        <ng-template #langErr let-control>\n                            <ng-container *ngIf=\"control.hasError('required')\">\n                                select language\n                            </ng-container>\n                        </ng-template>\n                    </nz-form-item>\n                    <nz-form-item>\n                        <nz-form-label nzFor=\"about\">Interested In</nz-form-label>\n                        <nz-form-control [nzErrorTip]=\"categoryErr\">\n                            <nz-select [(ngModel)]=\"categoryName\" formControlName=\"category\" nzPlaceHolder=\"Choose\"\n                                (ngModelChange)=\"subcat(categoryName)\" [nzDropdownClassName]=\"'interested-item'\">\n                                <nz-option [nzValue]=\"cat._id\" [nzLabel]=\"cat.text\"\n                                    *ngFor=\"let cat of category\" class=\"text-capitalize\"></nz-option>\n                            </nz-select>\n                        </nz-form-control>\n                        <ng-template #categoryErr let-control>\n                            <ng-container *ngIf=\"control.hasError('required')\">\n                                select category\n                            </ng-container>\n                        </ng-template>\n                    </nz-form-item>\n                    <nz-form-item>\n                        <nz-form-label nzFor=\"about\">Sub Category</nz-form-label>\n                        <nz-form-control [nzErrorTip]=\"subcategoryErr\">\n                            <nz-select [(ngModel)]=\"sub_cat\" (ngModelChange)=\"getSubid(sub_cat)\" [nzDisabled]=\"category_name == 'undefined'\"\n                                formControlName=\"Subcategory\" nzPlaceHolder=\"Choose\">\n                                <nz-option [nzValue]=\"item._id\" [nzLabel]=\"item.text\" *ngFor=\"let item of subcategory\">\n                                </nz-option>\n                            </nz-select>\n                        </nz-form-control>\n                        <ng-template #subcategoryErr let-control>\n                            <ng-container *ngIf=\"control.hasError('required')\">\n                                select sub category\n                            </ng-container>\n                        </ng-template>\n                    </nz-form-item>\n                    <nz-form-item>\n                        <nz-form-label nzFor=\"password\">{{\"Password\" | translate}}</nz-form-label>\n                        <nz-form-control [nzErrorTip]=\"passwordErrorTpl\">\n                            <nz-input-group [nzSuffix]=\"suffixTemplate\">\n                                <input [type]=\"passwordVisible ? 'text' : 'password'\" name=\"password\" id=\"password\"\n                                    formControlName=\"password\" nz-input [(ngModel)]=\"password\" />\n                            </nz-input-group>\n                            <ng-template #suffixTemplate>\n                                <i nz-icon [nzType]=\"passwordVisible ? 'eye' : 'eye-invisible'\"\n                                    (click)=\"passwordVisible = !passwordVisible\"></i>\n                            </ng-template>\n                            <ng-template #passwordErrorTpl let-control>\n                                <ng-container *ngIf=\"control.hasError('pattern')\">\n                                    {{\"PasswordPattern\" | translate}}\n                                </ng-container>\n                                <ng-container *ngIf=\"control.hasError('required')\">\n                                    {{\"EnterPassword\" | translate}}\n                                </ng-container>\n                            </ng-template>\n                        </nz-form-control>\n                    </nz-form-item>\n                    <nz-form-item>\n                        <nz-form-label nzFor=\"confirmpassword\">{{\"ConfirmPassword\" | translate}}</nz-form-label>\n                        <nz-form-control [nzErrorTip]=\"cpasswordErrorTpl\">\n                            <nz-input-group [nzSuffix]=\"confirmPassword\">\n                                <input [type]=\"\n                                        confirmpasswordVisible ? 'text' : 'password'\n                                    \" name=\"password\" id=\"confirmpassword\" formControlName=\"confirmPassword\" nz-input\n                                    [(ngModel)]=\"confirmpassword\" />\n                            </nz-input-group>\n                            <ng-template #confirmPassword>\n                                <i nz-icon [nzType]=\"\n                                        confirmpasswordVisible ? 'eye' : 'eye-invisible'\n                                    \" (click)=\"\n                                        confirmpasswordVisible = !confirmpasswordVisible\n                                    \"></i>\n                            </ng-template>\n                            <ng-template #cpasswordErrorTpl let-control>\n                                <ng-container *ngIf=\"control.hasError('confirm')\">\n                                    {{\"ConfirmPassowrdMatch\" | translate}}\n                                </ng-container>\n                                <ng-container *ngIf=\"control.hasError('required')\">\n                                    {{\"EnterConfirmPassword\" | translate}}\n                                </ng-container>\n                            </ng-template>\n                        </nz-form-control>\n                    </nz-form-item>\n                </div>\n            </div>\n\n        </form>\n        <div class=\"d-flex\" >\n            <label nz-checkbox class=\"mr-2\" [formControl]=\"agree\"></label>\n            <span class=\"text-sm\">\n                <span *ngIf=\"isShow\">{{\"Agree\" | translate}}</span>\n                <span *ngIf=\"!isShow\">  {{\"AgreeCon\" | translate}}</span>\n                <a routerLink=\"/terms\" rel=\"noopener\" target=\"_blank\">{{\"Terms\" | translate}}</a>\n               {{\"and\" | translate}}\n                <a routerLink=\"/privacy\" rel=\"noopener\" target=\"_blank\">{{\"Privacy\" | translate}}</a>\n            </span>\n        </div>\n        <div *ngIf=\"(agree.hasError('required') || agree.value == false) && isShow\" style=\"color:red\">\n            {{\"AgreeTerms\" | translate}}\n        </div>\n\n        <button nz-button class=\"auth-form-button auth-form-margin\" *ngIf=\"!isShow\" [nzType]=\"'primary'\" [disabled]=\"signUpForm.invalid\" (click)=\"SignUp()\">\n            {{\"Register\" | translate}}\n        </button>\n        <button nz-button class=\"auth-form-button auth-form-margin\" *ngIf=\"isShow\" [nzType]=\"'primary'\" [disabled]=\"signUpForm.invalid && agree.value == false \" (click)=\"SignUp()\">\n            {{\"Register\" | translate}}\n        </button>\n        <div class=\"text-center mt-2\">\n            {{\"HasAccount\" | translate}} <a routerLink=\"/auth/login\">{{\"Login\" | translate}}</a>\n        </div>\n    </div>\n    <div class=\"auth-form success-auth-form\" *ngIf=\"isVisisble\">\n        <div class=\"auth-logo\"></div>\n        <div class=\"text-center success-icon\">\n            <i-feather name=\"check-circle\"></i-feather>\n        </div>\n        <h4 class=\"text-center f-w-bold mb-2\">{{\"Congrats\" | translate}}</h4>\n        <h6 class=\"email-verify-text text-center text-reset\">\n            <a href=\"https://{{domain}}\" class=\"text-reset\" target=\"_blank\">{{\"YourEmail\" | translate}}\n                <span>{{emailaddress}}</span>\n                {{\"VerifyEmail\" | translate}}</a>\n        </h6>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { HelperService } from 'src/app/services/helper.service';\nimport { NotifyService } from 'src/app/services/notify.service';\n\n@Component({\n    selector: 'app-twitter',\n    templateUrl: './twitter.component.html',\n    styleUrls: ['./twitter.component.less'],\n})\nexport class TwitterComponent implements OnInit {\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private authService: AuthService,\n        private helper: HelperService,\n        private notify: NotifyService\n    ) {}\n\n    ngOnInit(): void {\n        this.route.queryParams.subscribe((data) => {\n            if (data.oauth_token) {\n                this.LogIn(data.oauth_token);\n                return;\n            }\n            this.router.navigate(['/auth/login']);\n        });\n    }\n\n    LogIn(token) {\n        this.authService.TwitterLoginToken(token).subscribe(\n            (data) => {\n                this.helper.Login(data);\n            },\n            (err) => {\n                this.notify.error(err.error.message);\n            }\n        );\n    }\n}\n","<div class=\"auth-section\">\n    <div class=\"text-center mt-4\">\n        <img src=\"assets/img/logo.svg\" alt=\"doodem\" height=\"42\" width=\"120\" draggable=\"false\" class=\"logo-image\">\n    </div>\n    <div class=\"auth-card-warpper\">\n        <div class=\"auth-card\">\n            <div class=\"auth-header\">\n                <img src=\"assets/img/auth/twitter.svg\" alt=\"twitter\" width=\"80px\" draggable=\"false\" class=\"logo-image\">\n                <h5 class=\"font-weight-bold\">{{\"TwittlerSucess\" | translate}}</h5>\n                <p class=\"text-muted mb-0\">{{\"TwitterSuccessDesc\" | translate}}</p>\n            </div>\n        </div>\n    </div>\n</div>","import { FormControl } from '@angular/forms';\n\nexport const OtpValidator = (control: FormControl) => {\n    if (!control.value) {\n        return { error: true, required: true };\n    } else if (!/^\\d{6}$/.test(control.value)) {\n        return { pattern: true, error: true };\n    }\n    return {};\n};\n"],"sourceRoot":"webpack:///"}